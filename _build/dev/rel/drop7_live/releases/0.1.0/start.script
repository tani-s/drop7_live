%% coding: utf-8
{script,
    {"drop7_live","0.1.0"},
    [{preLoaded,
         [atomics,counters,erl_init,erl_prim_loader,erl_tracer,erlang,
          erts_code_purger,erts_dirty_process_signal_handler,erts_internal,
          erts_literal_area_collector,init,persistent_term,prim_buffer,
          prim_eval,prim_file,prim_inet,prim_net,prim_socket,prim_zip,
          socket_registry,zlib]},
     {progress,preloaded},
     {path,["$ROOT/lib/kernel-9.0.2/ebin","$ROOT/lib/stdlib-5.0.2/ebin"]},
     {primLoad,
         [error_handler,application,application_controller,application_master,
          code,code_server,erl_eval,erl_lint,erl_parse,error_logger,ets,file,
          filename,file_server,file_io_server,gen,gen_event,gen_server,heart,
          kernel,logger,logger_filters,logger_server,logger_backend,
          logger_config,logger_simple_h,lists,proc_lib,supervisor]},
     {kernel_load_completed},
     {progress,kernel_load_completed},
     {path,["$ROOT/lib/kernel-9.0.2/ebin"]},
     {primLoad,
         [application_starter,auth,disk_log,disk_log_1,disk_log_server,
          disk_log_sup,dist_ac,dist_util,erl_boot_server,erl_compile_server,
          erl_ddll,erl_distribution,erl_epmd,erl_erts_errors,
          erl_kernel_errors,erl_reply,erl_signal_handler,erpc,erts_debug,
          gen_sctp,gen_tcp,gen_tcp_socket,gen_udp,gen_udp_socket,global,
          global_group,global_search,group,group_history,inet,inet6_sctp,
          inet6_tcp,inet6_tcp_dist,inet6_udp,inet_config,inet_db,inet_dns,
          inet_epmd_dist,inet_epmd_socket,inet_gethost_native,inet_hosts,
          inet_parse,inet_res,inet_sctp,inet_tcp,inet_tcp_dist,inet_udp,
          kernel_config,kernel_refc,local_tcp,local_udp,logger_disk_log_h,
          logger_formatter,logger_h_common,logger_handler_watcher,logger_olp,
          logger_proxy,logger_std_h,logger_sup,net,net_adm,net_kernel,os,pg,
          pg2,prim_tty,ram_file,raw_file_io,raw_file_io_compressed,
          raw_file_io_deflate,raw_file_io_delayed,raw_file_io_inflate,
          raw_file_io_list,rpc,seq_trace,socket,standard_error,user_drv,
          user_sup,wrap_log_reader]},
     {path,["$ROOT/lib/stdlib-5.0.2/ebin"]},
     {primLoad,
         [argparse,array,base64,beam_lib,binary,c,calendar,dets,dets_server,
          dets_sup,dets_utils,dets_v9,dict,digraph,digraph_utils,edlin,
          edlin_context,edlin_expand,edlin_type_suggestion,epp,
          erl_abstract_code,erl_anno,erl_bits,erl_compile,erl_error,
          erl_expand_records,erl_features,erl_internal,erl_posix_msg,erl_pp,
          erl_scan,erl_stdlib_errors,erl_tar,error_logger_file_h,
          error_logger_tty_h,escript,eval_bits,file_sorter,filelib,gb_sets,
          gb_trees,gen_fsm,gen_statem,io,io_lib,io_lib_format,io_lib_fread,
          io_lib_pretty,log_mf_h,maps,math,ms_transform,orddict,ordsets,
          otp_internal,peer,pool,proplists,qlc,qlc_pt,queue,rand,random,re,
          sets,shell,shell_default,shell_docs,slave,sofs,string,
          supervisor_bridge,sys,timer,unicode,unicode_util,uri_string,
          win32reg,zip]},
     {path,["$ROOT/lib/compiler-8.3.2/ebin"]},
     {primLoad,
         [beam_a,beam_asm,beam_block,beam_bounds,beam_call_types,beam_clean,
          beam_dict,beam_digraph,beam_disasm,beam_flatten,beam_jump,
          beam_kernel_to_ssa,beam_listing,beam_opcodes,beam_ssa,
          beam_ssa_alias,beam_ssa_bc_size,beam_ssa_bool,beam_ssa_bsm,
          beam_ssa_check,beam_ssa_codegen,beam_ssa_dead,beam_ssa_lint,
          beam_ssa_opt,beam_ssa_pp,beam_ssa_pre_codegen,
          beam_ssa_private_append,beam_ssa_recv,beam_ssa_share,beam_ssa_throw,
          beam_ssa_type,beam_trim,beam_types,beam_utils,beam_validator,beam_z,
          cerl,cerl_clauses,cerl_inline,cerl_trees,compile,core_lib,core_lint,
          core_parse,core_pp,core_scan,erl_bifs,rec_env,sys_core_alias,
          sys_core_bsm,sys_core_fold,sys_core_fold_lists,sys_core_inline,
          sys_core_prepare,sys_messages,sys_pre_attributes,v3_core,v3_kernel,
          v3_kernel_pp]},
     {path,
         ["$RELEASE_LIB/../releases/0.1.0/consolidated",
          "$RELEASE_LIB/elixir-1.15.4/ebin"]},
     {primLoad,
         ['Elixir.Access','Elixir.Agent','Elixir.Agent.Server',
          'Elixir.Application','Elixir.ArgumentError',
          'Elixir.ArithmeticError','Elixir.Atom','Elixir.BadArityError',
          'Elixir.BadBooleanError','Elixir.BadFunctionError',
          'Elixir.BadMapError','Elixir.BadStructError','Elixir.Base',
          'Elixir.Behaviour','Elixir.Bitwise','Elixir.Calendar',
          'Elixir.Calendar.ISO','Elixir.Calendar.TimeZoneDatabase',
          'Elixir.Calendar.UTCOnlyTimeZoneDatabase','Elixir.CaseClauseError',
          'Elixir.Code','Elixir.Code.Formatter','Elixir.Code.Fragment',
          'Elixir.Code.Identifier','Elixir.Code.LoadError',
          'Elixir.Code.Normalizer','Elixir.Code.Typespec',
          'Elixir.Collectable','Elixir.Collectable.BitString',
          'Elixir.Collectable.File.Stream','Elixir.Collectable.HashDict',
          'Elixir.Collectable.HashSet','Elixir.Collectable.IO.Stream',
          'Elixir.Collectable.List','Elixir.Collectable.Map',
          'Elixir.Collectable.MapSet','Elixir.CompileError',
          'Elixir.CondClauseError','Elixir.Config','Elixir.Config.Provider',
          'Elixir.Config.Reader','Elixir.Date','Elixir.Date.Range',
          'Elixir.DateTime','Elixir.Dict','Elixir.DynamicSupervisor',
          'Elixir.Enum','Elixir.Enum.EmptyError',
          'Elixir.Enum.OutOfBoundsError','Elixir.Enumerable',
          'Elixir.Enumerable.Date.Range','Elixir.Enumerable.File.Stream',
          'Elixir.Enumerable.Function','Elixir.Enumerable.GenEvent.Stream',
          'Elixir.Enumerable.HashDict','Elixir.Enumerable.HashSet',
          'Elixir.Enumerable.IO.Stream','Elixir.Enumerable.List',
          'Elixir.Enumerable.Map','Elixir.Enumerable.MapSet',
          'Elixir.Enumerable.Range','Elixir.Enumerable.Stream',
          'Elixir.ErlangError','Elixir.Exception','Elixir.File',
          'Elixir.File.CopyError','Elixir.File.Error','Elixir.File.LinkError',
          'Elixir.File.RenameError','Elixir.File.Stat','Elixir.File.Stream',
          'Elixir.Float','Elixir.Function','Elixir.FunctionClauseError',
          'Elixir.GenEvent','Elixir.GenEvent.Stream','Elixir.GenServer',
          'Elixir.HashDict','Elixir.HashSet','Elixir.IO','Elixir.IO.ANSI',
          'Elixir.IO.ANSI.Docs','Elixir.IO.ANSI.Sequence','Elixir.IO.Stream',
          'Elixir.IO.StreamError','Elixir.Inspect','Elixir.Inspect.Algebra',
          'Elixir.Inspect.Any','Elixir.Inspect.Atom',
          'Elixir.Inspect.BitString','Elixir.Inspect.Date',
          'Elixir.Inspect.Date.Range','Elixir.Inspect.DateTime',
          'Elixir.Inspect.Error','Elixir.Inspect.Float',
          'Elixir.Inspect.Function','Elixir.Inspect.HashDict',
          'Elixir.Inspect.HashSet','Elixir.Inspect.Inspect.Error',
          'Elixir.Inspect.Integer','Elixir.Inspect.List',
          'Elixir.Inspect.Macro.Env','Elixir.Inspect.Map',
          'Elixir.Inspect.MapSet','Elixir.Inspect.NaiveDateTime',
          'Elixir.Inspect.Opts','Elixir.Inspect.PID','Elixir.Inspect.Port',
          'Elixir.Inspect.Range','Elixir.Inspect.Reference',
          'Elixir.Inspect.Regex','Elixir.Inspect.Stream',
          'Elixir.Inspect.Time','Elixir.Inspect.Tuple','Elixir.Inspect.URI',
          'Elixir.Inspect.Version','Elixir.Inspect.Version.Requirement',
          'Elixir.Integer','Elixir.Kernel','Elixir.Kernel.CLI',
          'Elixir.Kernel.ErrorHandler','Elixir.Kernel.LexicalTracker',
          'Elixir.Kernel.ParallelCompiler','Elixir.Kernel.ParallelRequire',
          'Elixir.Kernel.SpecialForms','Elixir.Kernel.Typespec',
          'Elixir.Kernel.TypespecError','Elixir.Kernel.Utils',
          'Elixir.KeyError','Elixir.Keyword','Elixir.List',
          'Elixir.List.Chars','Elixir.List.Chars.Atom',
          'Elixir.List.Chars.BitString','Elixir.List.Chars.Float',
          'Elixir.List.Chars.Integer','Elixir.List.Chars.List','Elixir.Macro',
          'Elixir.Macro.Env','Elixir.Map','Elixir.MapSet','Elixir.MatchError',
          'Elixir.Module','Elixir.Module.LocalsTracker',
          'Elixir.Module.ParallelChecker','Elixir.Module.Types',
          'Elixir.Module.Types.Behaviour','Elixir.Module.Types.Error',
          'Elixir.Module.Types.Expr','Elixir.Module.Types.Helpers',
          'Elixir.Module.Types.Of','Elixir.Module.Types.Pattern',
          'Elixir.Module.Types.Unify','Elixir.NaiveDateTime','Elixir.Node',
          'Elixir.OptionParser','Elixir.OptionParser.ParseError',
          'Elixir.PartitionSupervisor','Elixir.Path','Elixir.Path.Wildcard',
          'Elixir.Port','Elixir.Process','Elixir.Protocol',
          'Elixir.Protocol.UndefinedError','Elixir.Range','Elixir.Record',
          'Elixir.Record.Extractor','Elixir.Regex',
          'Elixir.Regex.CompileError','Elixir.Registry',
          'Elixir.Registry.Partition','Elixir.Registry.Supervisor',
          'Elixir.RuntimeError','Elixir.Set','Elixir.Stream',
          'Elixir.Stream.Reducers','Elixir.String','Elixir.String.Break',
          'Elixir.String.Chars','Elixir.String.Chars.Atom',
          'Elixir.String.Chars.BitString','Elixir.String.Chars.Date',
          'Elixir.String.Chars.DateTime','Elixir.String.Chars.Float',
          'Elixir.String.Chars.Integer','Elixir.String.Chars.List',
          'Elixir.String.Chars.NaiveDateTime','Elixir.String.Chars.Time',
          'Elixir.String.Chars.URI','Elixir.String.Chars.Version',
          'Elixir.String.Chars.Version.Requirement','Elixir.String.Tokenizer',
          'Elixir.String.Tokenizer.ScriptSet',
          'Elixir.String.Tokenizer.Security','Elixir.String.Unicode',
          'Elixir.StringIO','Elixir.Supervisor','Elixir.Supervisor.Default',
          'Elixir.Supervisor.Spec','Elixir.SyntaxError','Elixir.System',
          'Elixir.System.EnvError','Elixir.System.SignalHandler',
          'Elixir.SystemLimitError','Elixir.Task','Elixir.Task.Supervised',
          'Elixir.Task.Supervisor','Elixir.Time','Elixir.TokenMissingError',
          'Elixir.TryClauseError','Elixir.Tuple','Elixir.URI',
          'Elixir.URI.Error','Elixir.UndefinedFunctionError',
          'Elixir.UnicodeConversionError','Elixir.Version',
          'Elixir.Version.InvalidRequirementError',
          'Elixir.Version.InvalidVersionError','Elixir.Version.Parser',
          'Elixir.Version.Requirement','Elixir.WithClauseError',elixir,
          elixir_aliases,elixir_bitstring,elixir_bootstrap,elixir_clauses,
          elixir_code_server,elixir_compiler,elixir_config,elixir_def,
          elixir_dispatch,elixir_env,elixir_erl,elixir_erl_clauses,
          elixir_erl_compiler,elixir_erl_for,elixir_erl_pass,elixir_erl_try,
          elixir_erl_var,elixir_errors,elixir_expand,elixir_fn,elixir_import,
          elixir_interpolation,elixir_lexical,elixir_locals,elixir_map,
          elixir_module,elixir_overridable,elixir_parser,elixir_quote,
          elixir_rewrite,elixir_sup,elixir_tokenizer,elixir_utils]},
     {path,["$ROOT/lib/sasl-4.2.1/ebin"]},
     {primLoad,
         [alarm_handler,erlsrv,format_lib_supp,misc_supp,rb,rb_format_supp,
          release_handler,release_handler_1,sasl,sasl_report,
          sasl_report_file_h,sasl_report_tty_h,systools,systools_lib,
          systools_make,systools_rc,systools_relup]},
     {path,
         ["$RELEASE_LIB/../releases/0.1.0/consolidated",
          "$RELEASE_LIB/logger-1.15.4/ebin"]},
     {primLoad,
         ['Elixir.Logger','Elixir.Logger.App','Elixir.Logger.Backends.Config',
          'Elixir.Logger.Backends.Console','Elixir.Logger.Backends.Handler',
          'Elixir.Logger.Backends.Internal',
          'Elixir.Logger.Backends.Supervisor',
          'Elixir.Logger.Backends.Watcher','Elixir.Logger.Formatter',
          'Elixir.Logger.Translator','Elixir.Logger.Utils']},
     {path,
         ["$RELEASE_LIB/../releases/0.1.0/consolidated",
          "$RELEASE_LIB/castore-1.0.5/ebin"]},
     {primLoad,['Elixir.CAStore']},
     {path,["$ROOT/lib/inets-9.0.1/ebin"]},
     {primLoad,
         [http_chunk,http_request,http_response,http_transport,http_uri,
          http_util,httpc,httpc_cookie,httpc_handler,httpc_handler_sup,
          httpc_manager,httpc_profile_sup,httpc_request,httpc_response,
          httpc_sup,httpd,httpd_acceptor,httpd_acceptor_sup,httpd_cgi,
          httpd_conf,httpd_connection_sup,httpd_custom,httpd_custom_api,
          httpd_esi,httpd_example,httpd_file,httpd_instance_sup,httpd_log,
          httpd_logger,httpd_manager,httpd_misc_sup,httpd_request,
          httpd_request_handler,httpd_response,httpd_script_env,httpd_socket,
          httpd_sup,httpd_util,inets,inets_app,inets_lib,inets_service,
          inets_sup,inets_trace,mod_actions,mod_alias,mod_auth,mod_auth_dets,
          mod_auth_mnesia,mod_auth_plain,mod_auth_server,mod_cgi,mod_dir,
          mod_disk_log,mod_esi,mod_get,mod_head,mod_log,mod_range,
          mod_responsecontrol,mod_security,mod_security_server,mod_trace]},
     {path,
         ["$RELEASE_LIB/../releases/0.1.0/consolidated",
          "$RELEASE_LIB/decimal-2.1.1/ebin"]},
     {primLoad,
         ['Elixir.Decimal','Elixir.Decimal.Context','Elixir.Decimal.Error',
          'Elixir.Decimal.Macros','Elixir.Inspect.Decimal',
          'Elixir.String.Chars.Decimal']},
     {path,
         ["$RELEASE_LIB/../releases/0.1.0/consolidated",
          "$RELEASE_LIB/jason-1.4.1/ebin"]},
     {primLoad,
         ['Elixir.Enumerable.Jason.OrderedObject','Elixir.Jason',
          'Elixir.Jason.Codegen','Elixir.Jason.DecodeError',
          'Elixir.Jason.Decoder','Elixir.Jason.Decoder.Unescape',
          'Elixir.Jason.Encode','Elixir.Jason.EncodeError',
          'Elixir.Jason.Encoder','Elixir.Jason.Encoder.Any',
          'Elixir.Jason.Encoder.Atom','Elixir.Jason.Encoder.BitString',
          'Elixir.Jason.Encoder.Date','Elixir.Jason.Encoder.DateTime',
          'Elixir.Jason.Encoder.Decimal','Elixir.Jason.Encoder.Float',
          'Elixir.Jason.Encoder.Integer',
          'Elixir.Jason.Encoder.Jason.Fragment',
          'Elixir.Jason.Encoder.Jason.OrderedObject',
          'Elixir.Jason.Encoder.List','Elixir.Jason.Encoder.Map',
          'Elixir.Jason.Encoder.NaiveDateTime','Elixir.Jason.Encoder.Time',
          'Elixir.Jason.Formatter','Elixir.Jason.Fragment',
          'Elixir.Jason.Helpers','Elixir.Jason.OrderedObject',
          'Elixir.Jason.Sigil']},
     {path,["$ROOT/lib/crypto-5.2/ebin"]},
     {primLoad,[crypto,crypto_ec_curves]},
     {path,["$ROOT/lib/asn1-5.1/ebin"]},
     {primLoad,[asn1rt_nif]},
     {path,["$ROOT/lib/public_key-1.14/ebin"]},
     {primLoad,
         ['OTP-PUB-KEY','PKCS-FRAME',pubkey_cert,pubkey_cert_records,
          pubkey_crl,pubkey_ocsp,pubkey_os_cacerts,pubkey_pbe,pubkey_pem,
          pubkey_ssh,public_key]},
     {path,["$ROOT/lib/ssl-11.0.2/ebin"]},
     {primLoad,
         [dtls_connection,dtls_connection_sup,dtls_gen_connection,
          dtls_handshake,dtls_listener_sup,dtls_packet_demux,dtls_record,
          dtls_server_session_cache_sup,dtls_server_sup,dtls_socket,dtls_sup,
          dtls_v1,inet6_tls_dist,inet_tls_dist,ssl,ssl_admin_sup,ssl_alert,
          ssl_app,ssl_certificate,ssl_cipher,ssl_cipher_format,
          ssl_client_session_cache_db,ssl_config,ssl_connection_sup,ssl_crl,
          ssl_crl_cache,ssl_crl_cache_api,ssl_crl_hash_dir,ssl_dh_groups,
          ssl_dist_admin_sup,ssl_dist_connection_sup,ssl_dist_sup,
          ssl_gen_statem,ssl_handshake,ssl_listen_tracker_sup,ssl_logger,
          ssl_manager,ssl_pem_cache,ssl_pkix_db,ssl_record,
          ssl_server_session_cache,ssl_server_session_cache_db,
          ssl_server_session_cache_sup,ssl_session,ssl_session_cache_api,
          ssl_srp_primes,ssl_sup,ssl_trace,
          ssl_upgrade_server_session_cache_sup,tls_bloom_filter,
          tls_client_connection_1_3,tls_client_ticket_store,tls_connection,
          tls_connection_sup,tls_dist_server_sup,tls_dist_sup,
          tls_dtls_connection,tls_dyn_connection_sup,tls_gen_connection,
          tls_gen_connection_1_3,tls_handshake,tls_handshake_1_3,tls_record,
          tls_record_1_3,tls_sender,tls_server_connection_1_3,
          tls_server_session_ticket,tls_server_session_ticket_sup,
          tls_server_sup,tls_socket,tls_sup,tls_v1]},
     {path,
         ["$RELEASE_LIB/../releases/0.1.0/consolidated",
          "$RELEASE_LIB/esbuild-0.8.1/ebin"]},
     {primLoad,
         ['Elixir.Esbuild','Elixir.Esbuild.NpmRegistry',
          'Elixir.Mix.Tasks.Esbuild','Elixir.Mix.Tasks.Esbuild.Install']},
     {path,
         ["$RELEASE_LIB/../releases/0.1.0/consolidated",
          "$RELEASE_LIB/expo-0.5.1/ebin"]},
     {primLoad,
         ['Elixir.Expo.MO','Elixir.Expo.MO.Composer',
          'Elixir.Expo.MO.InvalidFileError','Elixir.Expo.MO.Parser',
          'Elixir.Expo.MO.UnsupportedVersionError','Elixir.Expo.Message',
          'Elixir.Expo.Message.Plural','Elixir.Expo.Message.Singular',
          'Elixir.Expo.Messages','Elixir.Expo.PO','Elixir.Expo.PO.Composer',
          'Elixir.Expo.PO.DuplicateMessagesError','Elixir.Expo.PO.Parser',
          'Elixir.Expo.PO.SyntaxError','Elixir.Expo.PO.Tokenizer',
          'Elixir.Expo.PluralForms','Elixir.Expo.PluralForms.Known',
          'Elixir.Expo.PluralForms.SyntaxError',
          'Elixir.Expo.PluralForms.Tokenizer','Elixir.Expo.Util',
          'Elixir.Inspect.Expo.Message.Plural',
          'Elixir.Inspect.Expo.Message.Singular',
          'Elixir.Inspect.Expo.PluralForms','Elixir.Mix.Tasks.Expo.Msgfmt',
          'Elixir.Mix.Tasks.Expo.Msguniq',expo_plural_forms_parser,
          expo_po_parser]},
     {path,
         ["$RELEASE_LIB/../releases/0.1.0/consolidated",
          "$RELEASE_LIB/gettext-0.24.0/ebin"]},
     {primLoad,
         ['Elixir.Gettext','Elixir.Gettext.Application',
          'Elixir.Gettext.Backend','Elixir.Gettext.Compiler',
          'Elixir.Gettext.Error','Elixir.Gettext.Extractor',
          'Elixir.Gettext.ExtractorAgent','Elixir.Gettext.Fuzzy',
          'Elixir.Gettext.Interpolation',
          'Elixir.Gettext.Interpolation.Default','Elixir.Gettext.Merger',
          'Elixir.Gettext.MissingBindingsError','Elixir.Gettext.Plural',
          'Elixir.Gettext.Plural.UnknownLocaleError',
          'Elixir.Gettext.PluralFormError','Elixir.Mix.Tasks.Compile.Gettext',
          'Elixir.Mix.Tasks.Gettext.Extract',
          'Elixir.Mix.Tasks.Gettext.Merge']},
     {path,
         ["$RELEASE_LIB/../releases/0.1.0/consolidated",
          "$RELEASE_LIB/number-1.0.4/ebin"]},
     {primLoad,
         ['Elixir.Number','Elixir.Number.Conversion',
          'Elixir.Number.Conversion.BitString',
          'Elixir.Number.Conversion.Decimal','Elixir.Number.Conversion.Float',
          'Elixir.Number.Conversion.Integer','Elixir.Number.Currency',
          'Elixir.Number.Decimal','Elixir.Number.Delimit',
          'Elixir.Number.Human','Elixir.Number.Macros',
          'Elixir.Number.Percentage','Elixir.Number.Phone',
          'Elixir.Number.SI']},
     {path,
         ["$RELEASE_LIB/../releases/0.1.0/consolidated",
          "$RELEASE_LIB/eex-1.15.4/ebin"]},
     {primLoad,
         ['Elixir.EEx','Elixir.EEx.Compiler','Elixir.EEx.Engine',
          'Elixir.EEx.SmartEngine','Elixir.EEx.SyntaxError']},
     {path,
         ["$RELEASE_LIB/../releases/0.1.0/consolidated",
          "$RELEASE_LIB/phoenix_pubsub-2.1.3/ebin"]},
     {primLoad,
         ['Elixir.Phoenix.PubSub','Elixir.Phoenix.PubSub.Adapter',
          'Elixir.Phoenix.PubSub.Application',
          'Elixir.Phoenix.PubSub.BroadcastError','Elixir.Phoenix.PubSub.PG2',
          'Elixir.Phoenix.PubSub.PG2Worker',
          'Elixir.Phoenix.PubSub.Supervisor','Elixir.Phoenix.Tracker',
          'Elixir.Phoenix.Tracker.Clock',
          'Elixir.Phoenix.Tracker.DeltaGeneration',
          'Elixir.Phoenix.Tracker.Replica','Elixir.Phoenix.Tracker.Shard',
          'Elixir.Phoenix.Tracker.State']},
     {path,
         ["$RELEASE_LIB/../releases/0.1.0/consolidated",
          "$RELEASE_LIB/mime-2.0.5/ebin"]},
     {primLoad,['Elixir.MIME']},
     {path,
         ["$RELEASE_LIB/../releases/0.1.0/consolidated",
          "$RELEASE_LIB/plug_crypto-2.0.0/ebin"]},
     {primLoad,
         ['Elixir.Plug.Crypto','Elixir.Plug.Crypto.Application',
          'Elixir.Plug.Crypto.KeyGenerator',
          'Elixir.Plug.Crypto.MessageEncryptor',
          'Elixir.Plug.Crypto.MessageVerifier']},
     {path,
         ["$RELEASE_LIB/../releases/0.1.0/consolidated",
          "$RELEASE_LIB/telemetry-1.2.1/ebin"]},
     {primLoad,
         [telemetry,telemetry_app,telemetry_handler_table,telemetry_sup,
          telemetry_test]},
     {path,
         ["$RELEASE_LIB/../releases/0.1.0/consolidated",
          "$RELEASE_LIB/plug-1.15.2/ebin"]},
     {primLoad,
         ['Elixir.Inspect.Plug.Conn','Elixir.Plug',
          'Elixir.Plug.Adapters.Cowboy','Elixir.Plug.Adapters.Test.Conn',
          'Elixir.Plug.Application','Elixir.Plug.BadRequestError',
          'Elixir.Plug.BasicAuth','Elixir.Plug.Builder',
          'Elixir.Plug.CSRFProtection',
          'Elixir.Plug.CSRFProtection.InvalidCSRFTokenError',
          'Elixir.Plug.CSRFProtection.InvalidCrossOriginRequestError',
          'Elixir.Plug.Conn','Elixir.Plug.Conn.Adapter',
          'Elixir.Plug.Conn.AlreadySentError',
          'Elixir.Plug.Conn.CookieOverflowError','Elixir.Plug.Conn.Cookies',
          'Elixir.Plug.Conn.InvalidHeaderError',
          'Elixir.Plug.Conn.InvalidQueryError',
          'Elixir.Plug.Conn.NotSentError','Elixir.Plug.Conn.Query',
          'Elixir.Plug.Conn.Status','Elixir.Plug.Conn.Unfetched',
          'Elixir.Plug.Conn.Utils','Elixir.Plug.Conn.WrapperError',
          'Elixir.Plug.Debugger','Elixir.Plug.ErrorHandler',
          'Elixir.Plug.Exception','Elixir.Plug.Exception.Any',
          'Elixir.Plug.HTML','Elixir.Plug.Head','Elixir.Plug.Logger',
          'Elixir.Plug.MIME','Elixir.Plug.MethodOverride',
          'Elixir.Plug.Parsers','Elixir.Plug.Parsers.BadEncodingError',
          'Elixir.Plug.Parsers.JSON','Elixir.Plug.Parsers.MULTIPART',
          'Elixir.Plug.Parsers.ParseError',
          'Elixir.Plug.Parsers.RequestTooLargeError',
          'Elixir.Plug.Parsers.URLENCODED',
          'Elixir.Plug.Parsers.UnsupportedMediaTypeError',
          'Elixir.Plug.RequestId','Elixir.Plug.RewriteOn',
          'Elixir.Plug.Router','Elixir.Plug.Router.InvalidSpecError',
          'Elixir.Plug.Router.MalformedURIError','Elixir.Plug.Router.Utils',
          'Elixir.Plug.SSL','Elixir.Plug.Session',
          'Elixir.Plug.Session.COOKIE','Elixir.Plug.Session.ETS',
          'Elixir.Plug.Session.Store','Elixir.Plug.Static',
          'Elixir.Plug.Static.InvalidPathError','Elixir.Plug.Telemetry',
          'Elixir.Plug.Test','Elixir.Plug.TimeoutError','Elixir.Plug.Upload',
          'Elixir.Plug.UploadError',plug_multipart]},
     {path,
         ["$RELEASE_LIB/../releases/0.1.0/consolidated",
          "$RELEASE_LIB/phoenix_html-3.3.3/ebin"]},
     {primLoad,
         ['Elixir.Phoenix.HTML','Elixir.Phoenix.HTML.Engine',
          'Elixir.Phoenix.HTML.Form','Elixir.Phoenix.HTML.FormData',
          'Elixir.Phoenix.HTML.FormData.Atom',
          'Elixir.Phoenix.HTML.FormData.Map',
          'Elixir.Phoenix.HTML.FormData.Plug.Conn',
          'Elixir.Phoenix.HTML.FormField','Elixir.Phoenix.HTML.Format',
          'Elixir.Phoenix.HTML.Link','Elixir.Phoenix.HTML.Safe',
          'Elixir.Phoenix.HTML.Safe.Atom',
          'Elixir.Phoenix.HTML.Safe.BitString',
          'Elixir.Phoenix.HTML.Safe.Date','Elixir.Phoenix.HTML.Safe.DateTime',
          'Elixir.Phoenix.HTML.Safe.Float','Elixir.Phoenix.HTML.Safe.Integer',
          'Elixir.Phoenix.HTML.Safe.List',
          'Elixir.Phoenix.HTML.Safe.NaiveDateTime',
          'Elixir.Phoenix.HTML.Safe.Phoenix.HTML.Form',
          'Elixir.Phoenix.HTML.Safe.Time','Elixir.Phoenix.HTML.Safe.Tuple',
          'Elixir.Phoenix.HTML.Safe.URI','Elixir.Phoenix.HTML.Tag']},
     {path,
         ["$RELEASE_LIB/../releases/0.1.0/consolidated",
          "$RELEASE_LIB/phoenix_template-1.0.4/ebin"]},
     {primLoad,
         ['Elixir.Phoenix.Template','Elixir.Phoenix.Template.EExEngine',
          'Elixir.Phoenix.Template.Engine',
          'Elixir.Phoenix.Template.ExsEngine']},
     {path,
         ["$RELEASE_LIB/../releases/0.1.0/consolidated",
          "$RELEASE_LIB/cowlib-2.12.1/ebin"]},
     {primLoad,
         [cow_base64url,cow_cookie,cow_date,cow_hpack,cow_http,cow_http2,
          cow_http2_machine,cow_http_hd,cow_http_struct_hd,cow_http_te,
          cow_iolists,cow_link,cow_mimetypes,cow_multipart,cow_qs,cow_spdy,
          cow_sse,cow_uri,cow_uri_template,cow_ws]},
     {path,
         ["$RELEASE_LIB/../releases/0.1.0/consolidated",
          "$RELEASE_LIB/ranch-1.8.0/ebin"]},
     {primLoad,
         [ranch,ranch_acceptor,ranch_acceptors_sup,ranch_app,ranch_conns_sup,
          ranch_crc32c,ranch_listener_sup,ranch_protocol,ranch_proxy_header,
          ranch_server,ranch_ssl,ranch_sup,ranch_tcp,ranch_transport]},
     {path,
         ["$RELEASE_LIB/../releases/0.1.0/consolidated",
          "$RELEASE_LIB/cowboy-2.10.0/ebin"]},
     {primLoad,
         [cowboy,cowboy_app,cowboy_bstr,cowboy_children,cowboy_clear,
          cowboy_clock,cowboy_compress_h,cowboy_constraints,cowboy_handler,
          cowboy_http,cowboy_http2,cowboy_loop,cowboy_metrics_h,
          cowboy_middleware,cowboy_req,cowboy_rest,cowboy_router,
          cowboy_static,cowboy_stream,cowboy_stream_h,cowboy_sub_protocol,
          cowboy_sup,cowboy_tls,cowboy_tracer_h,cowboy_websocket]},
     {path,
         ["$RELEASE_LIB/../releases/0.1.0/consolidated",
          "$RELEASE_LIB/cowboy_telemetry-0.4.0/ebin"]},
     {primLoad,[cowboy_telemetry_h]},
     {path,
         ["$RELEASE_LIB/../releases/0.1.0/consolidated",
          "$RELEASE_LIB/plug_cowboy-2.6.1/ebin"]},
     {primLoad,
         ['Elixir.Plug.Cowboy','Elixir.Plug.Cowboy.Conn',
          'Elixir.Plug.Cowboy.Drainer','Elixir.Plug.Cowboy.Handler',
          'Elixir.Plug.Cowboy.Translator']},
     {path,
         ["$RELEASE_LIB/../releases/0.1.0/consolidated",
          "$RELEASE_LIB/websock-0.5.3/ebin"]},
     {primLoad,['Elixir.WebSock']},
     {path,
         ["$RELEASE_LIB/../releases/0.1.0/consolidated",
          "$RELEASE_LIB/websock_adapter-0.5.5/ebin"]},
     {primLoad,
         ['Elixir.WebSockAdapter','Elixir.WebSockAdapter.CowboyAdapter',
          'Elixir.WebSockAdapter.UpgradeError',
          'Elixir.WebSockAdapter.UpgradeValidation']},
     {path,
         ["$RELEASE_LIB/../releases/0.1.0/consolidated",
          "$RELEASE_LIB/phoenix-1.7.10/ebin"]},
     {primLoad,
         ['Elixir.Mix.Phoenix','Elixir.Mix.Phoenix.Context',
          'Elixir.Mix.Phoenix.Schema','Elixir.Mix.Tasks.Compile.Phoenix',
          'Elixir.Mix.Tasks.Phx','Elixir.Mix.Tasks.Phx.Digest',
          'Elixir.Mix.Tasks.Phx.Digest.Clean','Elixir.Mix.Tasks.Phx.Gen',
          'Elixir.Mix.Tasks.Phx.Gen.Auth',
          'Elixir.Mix.Tasks.Phx.Gen.Auth.HashingLibrary',
          'Elixir.Mix.Tasks.Phx.Gen.Auth.Injector',
          'Elixir.Mix.Tasks.Phx.Gen.Auth.Migration',
          'Elixir.Mix.Tasks.Phx.Gen.Cert','Elixir.Mix.Tasks.Phx.Gen.Channel',
          'Elixir.Mix.Tasks.Phx.Gen.Context',
          'Elixir.Mix.Tasks.Phx.Gen.Embedded','Elixir.Mix.Tasks.Phx.Gen.Html',
          'Elixir.Mix.Tasks.Phx.Gen.Json','Elixir.Mix.Tasks.Phx.Gen.Live',
          'Elixir.Mix.Tasks.Phx.Gen.Notifier',
          'Elixir.Mix.Tasks.Phx.Gen.Presence',
          'Elixir.Mix.Tasks.Phx.Gen.Release',
          'Elixir.Mix.Tasks.Phx.Gen.Schema','Elixir.Mix.Tasks.Phx.Gen.Secret',
          'Elixir.Mix.Tasks.Phx.Gen.Socket','Elixir.Mix.Tasks.Phx.Routes',
          'Elixir.Mix.Tasks.Phx.Server','Elixir.Phoenix',
          'Elixir.Phoenix.ActionClauseError','Elixir.Phoenix.Channel',
          'Elixir.Phoenix.Channel.Server','Elixir.Phoenix.ChannelTest',
          'Elixir.Phoenix.ChannelTest.NoopSerializer',
          'Elixir.Phoenix.CodeReloader','Elixir.Phoenix.CodeReloader.Proxy',
          'Elixir.Phoenix.CodeReloader.Server','Elixir.Phoenix.Config',
          'Elixir.Phoenix.ConnTest','Elixir.Phoenix.Controller',
          'Elixir.Phoenix.Controller.Pipeline','Elixir.Phoenix.Digester',
          'Elixir.Phoenix.Digester.Compressor','Elixir.Phoenix.Digester.Gzip',
          'Elixir.Phoenix.Endpoint','Elixir.Phoenix.Endpoint.Cowboy2Adapter',
          'Elixir.Phoenix.Endpoint.RenderErrors',
          'Elixir.Phoenix.Endpoint.Supervisor',
          'Elixir.Phoenix.Endpoint.SyncCodeReloadPlug',
          'Elixir.Phoenix.Endpoint.Watcher','Elixir.Phoenix.Flash',
          'Elixir.Phoenix.Logger','Elixir.Phoenix.MissingParamError',
          'Elixir.Phoenix.Naming','Elixir.Phoenix.NotAcceptableError',
          'Elixir.Phoenix.Param','Elixir.Phoenix.Param.Any',
          'Elixir.Phoenix.Param.Atom','Elixir.Phoenix.Param.BitString',
          'Elixir.Phoenix.Param.Float','Elixir.Phoenix.Param.Integer',
          'Elixir.Phoenix.Param.Map','Elixir.Phoenix.Presence',
          'Elixir.Phoenix.Presence.Tracker','Elixir.Phoenix.Router',
          'Elixir.Phoenix.Router.ConsoleFormatter',
          'Elixir.Phoenix.Router.Helpers',
          'Elixir.Phoenix.Router.MalformedURIError',
          'Elixir.Phoenix.Router.NoRouteError',
          'Elixir.Phoenix.Router.Resource','Elixir.Phoenix.Router.Route',
          'Elixir.Phoenix.Router.Scope','Elixir.Phoenix.Socket',
          'Elixir.Phoenix.Socket.Broadcast',
          'Elixir.Phoenix.Socket.InvalidMessageError',
          'Elixir.Phoenix.Socket.Message','Elixir.Phoenix.Socket.PoolDrainer',
          'Elixir.Phoenix.Socket.PoolSupervisor',
          'Elixir.Phoenix.Socket.Reply','Elixir.Phoenix.Socket.Serializer',
          'Elixir.Phoenix.Socket.Transport',
          'Elixir.Phoenix.Socket.V1.JSONSerializer',
          'Elixir.Phoenix.Socket.V2.JSONSerializer','Elixir.Phoenix.Token',
          'Elixir.Phoenix.Transports.LongPoll',
          'Elixir.Phoenix.Transports.LongPoll.Server',
          'Elixir.Phoenix.Transports.WebSocket',
          'Elixir.Phoenix.VerifiedRoutes',
          'Elixir.Plug.Exception.Phoenix.ActionClauseError']},
     {path,
         ["$RELEASE_LIB/../releases/0.1.0/consolidated",
          "$RELEASE_LIB/phoenix_live_view-0.19.5/ebin"]},
     {primLoad,
         ['Elixir.Enumerable.Phoenix.LiveView.LiveStream',
          'Elixir.Inspect.Phoenix.LiveView.Socket',
          'Elixir.Inspect.Phoenix.LiveView.Socket.AssignsNotInSocket',
          'Elixir.Inspect.Phoenix.LiveView.UploadConfig',
          'Elixir.Inspect.Phoenix.LiveViewTest.Element',
          'Elixir.Inspect.Phoenix.LiveViewTest.Upload',
          'Elixir.Inspect.Phoenix.LiveViewTest.View',
          'Elixir.Phoenix.Component','Elixir.Phoenix.Component.Declarative',
          'Elixir.Phoenix.HTML.Safe.Phoenix.LiveComponent.CID',
          'Elixir.Phoenix.HTML.Safe.Phoenix.LiveView.Component',
          'Elixir.Phoenix.HTML.Safe.Phoenix.LiveView.Comprehension',
          'Elixir.Phoenix.HTML.Safe.Phoenix.LiveView.JS',
          'Elixir.Phoenix.HTML.Safe.Phoenix.LiveView.Rendered',
          'Elixir.Phoenix.LiveComponent','Elixir.Phoenix.LiveComponent.CID',
          'Elixir.Phoenix.LiveView','Elixir.Phoenix.LiveView.Application',
          'Elixir.Phoenix.LiveView.Channel',
          'Elixir.Phoenix.LiveView.Component',
          'Elixir.Phoenix.LiveView.Comprehension',
          'Elixir.Phoenix.LiveView.Controller','Elixir.Phoenix.LiveView.Diff',
          'Elixir.Phoenix.LiveView.Engine',
          'Elixir.Phoenix.LiveView.HTMLAlgebra',
          'Elixir.Phoenix.LiveView.HTMLEngine',
          'Elixir.Phoenix.LiveView.HTMLFormatter',
          'Elixir.Phoenix.LiveView.Helpers','Elixir.Phoenix.LiveView.JS',
          'Elixir.Phoenix.LiveView.Lifecycle',
          'Elixir.Phoenix.LiveView.LiveStream',
          'Elixir.Phoenix.LiveView.Logger','Elixir.Phoenix.LiveView.Plug',
          'Elixir.Phoenix.LiveView.Rendered',
          'Elixir.Phoenix.LiveView.Renderer','Elixir.Phoenix.LiveView.Route',
          'Elixir.Phoenix.LiveView.Router','Elixir.Phoenix.LiveView.Session',
          'Elixir.Phoenix.LiveView.Socket',
          'Elixir.Phoenix.LiveView.Socket.AssignsNotInSocket',
          'Elixir.Phoenix.LiveView.Static',
          'Elixir.Phoenix.LiveView.TagEngine',
          'Elixir.Phoenix.LiveView.Tokenizer',
          'Elixir.Phoenix.LiveView.Tokenizer.ParseError',
          'Elixir.Phoenix.LiveView.Upload',
          'Elixir.Phoenix.LiveView.UploadChannel',
          'Elixir.Phoenix.LiveView.UploadConfig',
          'Elixir.Phoenix.LiveView.UploadEntry',
          'Elixir.Phoenix.LiveView.UploadTmpFileWriter',
          'Elixir.Phoenix.LiveView.UploadWriter',
          'Elixir.Phoenix.LiveView.Utils','Elixir.Phoenix.LiveViewTest',
          'Elixir.Phoenix.LiveViewTest.ClientProxy',
          'Elixir.Phoenix.LiveViewTest.DOM',
          'Elixir.Phoenix.LiveViewTest.Element',
          'Elixir.Phoenix.LiveViewTest.Upload',
          'Elixir.Phoenix.LiveViewTest.UploadClient',
          'Elixir.Phoenix.LiveViewTest.View',
          'Elixir.String.Chars.Phoenix.LiveComponent.CID']},
     {path,
         ["$RELEASE_LIB/../releases/0.1.0/consolidated",
          "$RELEASE_LIB/telemetry_metrics-0.6.2/ebin"]},
     {primLoad,
         ['Elixir.Telemetry.Metrics',
          'Elixir.Telemetry.Metrics.ConsoleReporter',
          'Elixir.Telemetry.Metrics.Counter',
          'Elixir.Telemetry.Metrics.Distribution',
          'Elixir.Telemetry.Metrics.LastValue','Elixir.Telemetry.Metrics.Sum',
          'Elixir.Telemetry.Metrics.Summary']},
     {path,
         ["$RELEASE_LIB/../releases/0.1.0/consolidated",
          "$RELEASE_LIB/phoenix_live_dashboard-0.8.3/ebin"]},
     {primLoad,
         ['Elixir.Inspect.Phoenix.LiveDashboard.PageLive',
          'Elixir.Phoenix.LiveDashboard',
          'Elixir.Phoenix.LiveDashboard.AppInfoComponent',
          'Elixir.Phoenix.LiveDashboard.Application',
          'Elixir.Phoenix.LiveDashboard.ApplicationsPage',
          'Elixir.Phoenix.LiveDashboard.Assets',
          'Elixir.Phoenix.LiveDashboard.ChartComponent',
          'Elixir.Phoenix.LiveDashboard.EctoStatsPage',
          'Elixir.Phoenix.LiveDashboard.EtsInfoComponent',
          'Elixir.Phoenix.LiveDashboard.EtsPage',
          'Elixir.Phoenix.LiveDashboard.Helpers',
          'Elixir.Phoenix.LiveDashboard.HomePage',
          'Elixir.Phoenix.LiveDashboard.LayeredGraphComponent',
          'Elixir.Phoenix.LiveDashboard.LayeredGraphComponent.Arrow',
          'Elixir.Phoenix.LiveDashboard.LayeredGraphComponent.Circle',
          'Elixir.Phoenix.LiveDashboard.LayoutView',
          'Elixir.Phoenix.LiveDashboard.LoggerPubSubBackend',
          'Elixir.Phoenix.LiveDashboard.MemoryAllocatorsPage',
          'Elixir.Phoenix.LiveDashboard.MetricsPage',
          'Elixir.Phoenix.LiveDashboard.ModalComponent',
          'Elixir.Phoenix.LiveDashboard.NavBarComponent',
          'Elixir.Phoenix.LiveDashboard.OSMonPage',
          'Elixir.Phoenix.LiveDashboard.PageBuilder',
          'Elixir.Phoenix.LiveDashboard.PageLive',
          'Elixir.Phoenix.LiveDashboard.PageNotFound',
          'Elixir.Phoenix.LiveDashboard.PortInfoComponent',
          'Elixir.Phoenix.LiveDashboard.PortsPage',
          'Elixir.Phoenix.LiveDashboard.ProcessInfoComponent',
          'Elixir.Phoenix.LiveDashboard.ProcessesPage',
          'Elixir.Phoenix.LiveDashboard.ReingoldTilford',
          'Elixir.Phoenix.LiveDashboard.ReingoldTilford.Line',
          'Elixir.Phoenix.LiveDashboard.ReingoldTilford.Node',
          'Elixir.Phoenix.LiveDashboard.RequestLogger',
          'Elixir.Phoenix.LiveDashboard.RequestLoggerPage',
          'Elixir.Phoenix.LiveDashboard.Router',
          'Elixir.Phoenix.LiveDashboard.SocketInfoComponent',
          'Elixir.Phoenix.LiveDashboard.SocketsPage',
          'Elixir.Phoenix.LiveDashboard.SystemInfo',
          'Elixir.Phoenix.LiveDashboard.SystemInfo.PortDetails',
          'Elixir.Phoenix.LiveDashboard.SystemInfo.ProcessDetails',
          'Elixir.Phoenix.LiveDashboard.TableComponent',
          'Elixir.Phoenix.LiveDashboard.TelemetryListener',
          'Elixir.Phoenix.LiveDashboard.TitleBarComponent',
          'Elixir.Phoenix.LiveDashboard.Web']},
     {path,
         ["$RELEASE_LIB/../releases/0.1.0/consolidated",
          "$RELEASE_LIB/file_system-0.2.10/ebin"]},
     {primLoad,
         ['Elixir.FileSystem','Elixir.FileSystem.Backend',
          'Elixir.FileSystem.Backends.FSInotify',
          'Elixir.FileSystem.Backends.FSMac',
          'Elixir.FileSystem.Backends.FSPoll',
          'Elixir.FileSystem.Backends.FSWindows','Elixir.FileSystem.Worker']},
     {path,
         ["$RELEASE_LIB/../releases/0.1.0/consolidated",
          "$RELEASE_LIB/phoenix_live_reload-1.4.1/ebin"]},
     {primLoad,
         ['Elixir.Phoenix.LiveReloader',
          'Elixir.Phoenix.LiveReloader.Application',
          'Elixir.Phoenix.LiveReloader.Channel',
          'Elixir.Phoenix.LiveReloader.Socket']},
     {path,["$ROOT/lib/runtime_tools-2.0/ebin"]},
     {primLoad,
         [appmon_info,dbg,dyntrace,erts_alloc_config,instrument,msacc,
          observer_backend,runtime_tools,runtime_tools_sup,scheduler,
          system_information,ttb_autostart]},
     {path,
         ["$RELEASE_LIB/../releases/0.1.0/consolidated",
          "$RELEASE_LIB/tailwind-0.2.2/ebin"]},
     {primLoad,
         ['Elixir.Mix.Tasks.Tailwind','Elixir.Mix.Tasks.Tailwind.Install',
          'Elixir.Tailwind']},
     {path,
         ["$RELEASE_LIB/../releases/0.1.0/consolidated",
          "$RELEASE_LIB/telemetry_poller-1.0.0/ebin"]},
     {primLoad,
         [telemetry_poller,telemetry_poller_app,telemetry_poller_builtin,
          telemetry_poller_sup]},
     {path,
         ["$RELEASE_LIB/../releases/0.1.0/consolidated",
          "$RELEASE_LIB/uuid-1.1.8/ebin"]},
     {primLoad,['Elixir.UUID']},
     {path,
         ["$RELEASE_LIB/../releases/0.1.0/consolidated",
          "$RELEASE_LIB/drop7_live-0.1.0/ebin"]},
     {primLoad,
         ['Elixir.Drop7.InitGame','Elixir.Drop7.TileRenderer',
          'Elixir.Drop7.Turn','Elixir.Drop7.Utils','Elixir.Drop7Live',
          'Elixir.Drop7Live.Application','Elixir.Drop7Live.Score',
          'Elixir.Drop7LiveWeb','Elixir.Drop7LiveWeb.CoreComponents',
          'Elixir.Drop7LiveWeb.Endpoint','Elixir.Drop7LiveWeb.ErrorHTML',
          'Elixir.Drop7LiveWeb.ErrorJSON','Elixir.Drop7LiveWeb.Gettext',
          'Elixir.Drop7LiveWeb.Layouts','Elixir.Drop7LiveWeb.PageController',
          'Elixir.Drop7LiveWeb.PageHTML','Elixir.Drop7LiveWeb.Router',
          'Elixir.Drop7LiveWeb.Telemetry','Elixir.Drop7Web.GameLive']},
     {path,
         ["$RELEASE_LIB/../releases/0.1.0/consolidated",
          "$RELEASE_LIB/iex-1.15.4/ebin"]},
     {primLoad,
         ['Elixir.IEx','Elixir.IEx.App','Elixir.IEx.Autocomplete',
          'Elixir.IEx.Broker','Elixir.IEx.CLI','Elixir.IEx.Config',
          'Elixir.IEx.Evaluator','Elixir.IEx.Helpers','Elixir.IEx.History',
          'Elixir.IEx.Info','Elixir.IEx.Info.Any','Elixir.IEx.Info.Atom',
          'Elixir.IEx.Info.BitString','Elixir.IEx.Info.Date',
          'Elixir.IEx.Info.DateTime','Elixir.IEx.Info.Float',
          'Elixir.IEx.Info.Function','Elixir.IEx.Info.Integer',
          'Elixir.IEx.Info.List','Elixir.IEx.Info.Map',
          'Elixir.IEx.Info.NaiveDateTime','Elixir.IEx.Info.PID',
          'Elixir.IEx.Info.Port','Elixir.IEx.Info.Range',
          'Elixir.IEx.Info.Reference','Elixir.IEx.Info.Regex',
          'Elixir.IEx.Info.Time','Elixir.IEx.Info.Tuple',
          'Elixir.IEx.Introspection','Elixir.IEx.Pry','Elixir.IEx.Server']},
     {progress,modules_loaded},
     {path,
         ["$RELEASE_LIB/../releases/0.1.0/consolidated",
          "$ROOT/lib/kernel-9.0.2/ebin","$ROOT/lib/stdlib-5.0.2/ebin",
          "$ROOT/lib/compiler-8.3.2/ebin","$RELEASE_LIB/elixir-1.15.4/ebin",
          "$ROOT/lib/sasl-4.2.1/ebin","$RELEASE_LIB/logger-1.15.4/ebin",
          "$RELEASE_LIB/castore-1.0.5/ebin","$ROOT/lib/inets-9.0.1/ebin",
          "$RELEASE_LIB/decimal-2.1.1/ebin","$RELEASE_LIB/jason-1.4.1/ebin",
          "$ROOT/lib/crypto-5.2/ebin","$ROOT/lib/asn1-5.1/ebin",
          "$ROOT/lib/public_key-1.14/ebin","$ROOT/lib/ssl-11.0.2/ebin",
          "$RELEASE_LIB/esbuild-0.8.1/ebin","$RELEASE_LIB/expo-0.5.1/ebin",
          "$RELEASE_LIB/gettext-0.24.0/ebin","$RELEASE_LIB/number-1.0.4/ebin",
          "$RELEASE_LIB/eex-1.15.4/ebin",
          "$RELEASE_LIB/phoenix_pubsub-2.1.3/ebin",
          "$RELEASE_LIB/mime-2.0.5/ebin",
          "$RELEASE_LIB/plug_crypto-2.0.0/ebin",
          "$RELEASE_LIB/telemetry-1.2.1/ebin","$RELEASE_LIB/plug-1.15.2/ebin",
          "$RELEASE_LIB/phoenix_html-3.3.3/ebin",
          "$RELEASE_LIB/phoenix_template-1.0.4/ebin",
          "$RELEASE_LIB/cowlib-2.12.1/ebin","$RELEASE_LIB/ranch-1.8.0/ebin",
          "$RELEASE_LIB/cowboy-2.10.0/ebin",
          "$RELEASE_LIB/cowboy_telemetry-0.4.0/ebin",
          "$RELEASE_LIB/plug_cowboy-2.6.1/ebin",
          "$RELEASE_LIB/websock-0.5.3/ebin",
          "$RELEASE_LIB/websock_adapter-0.5.5/ebin",
          "$RELEASE_LIB/phoenix-1.7.10/ebin",
          "$RELEASE_LIB/phoenix_live_view-0.19.5/ebin",
          "$RELEASE_LIB/telemetry_metrics-0.6.2/ebin",
          "$RELEASE_LIB/phoenix_live_dashboard-0.8.3/ebin",
          "$RELEASE_LIB/file_system-0.2.10/ebin",
          "$RELEASE_LIB/phoenix_live_reload-1.4.1/ebin",
          "$ROOT/lib/runtime_tools-2.0/ebin",
          "$RELEASE_LIB/tailwind-0.2.2/ebin",
          "$RELEASE_LIB/telemetry_poller-1.0.0/ebin",
          "$RELEASE_LIB/uuid-1.1.8/ebin","$RELEASE_LIB/drop7_live-0.1.0/ebin",
          "$RELEASE_LIB/iex-1.15.4/ebin"]},
     {kernelProcess,heart,{heart,start,[]}},
     {kernelProcess,logger,{logger_server,start_link,[]}},
     {kernelProcess,application_controller,
         {application_controller,start,
             [{application,kernel,
                  [{description,"ERTS  CXC 138 10"},
                   {vsn,"9.0.2"},
                   {id,[]},
                   {modules,
                       [application,application_controller,application_master,
                        application_starter,auth,code,code_server,dist_util,
                        erl_boot_server,erl_compile_server,erl_distribution,
                        erl_erts_errors,erl_reply,erl_kernel_errors,
                        erl_signal_handler,erpc,error_handler,error_logger,
                        file,file_server,file_io_server,global,global_group,
                        global_search,group,group_history,heart,inet6_tcp,
                        inet6_tcp_dist,inet6_udp,inet6_sctp,inet_config,
                        inet_epmd_dist,inet_epmd_socket,inet_hosts,
                        inet_gethost_native,inet_tcp_dist,kernel,
                        kernel_config,kernel_refc,local_tcp,local_udp,logger,
                        logger_backend,logger_config,logger_disk_log_h,
                        logger_filters,logger_formatter,logger_h_common,
                        logger_handler_watcher,logger_olp,logger_proxy,
                        logger_server,logger_simple_h,logger_std_h,logger_sup,
                        net,net_adm,net_kernel,os,ram_file,rpc,user_drv,
                        user_sup,prim_tty,disk_log,disk_log_1,disk_log_server,
                        disk_log_sup,dist_ac,erl_ddll,erl_epmd,erts_debug,
                        gen_tcp,gen_tcp_socket,gen_udp,gen_udp_socket,
                        gen_sctp,inet,inet_db,inet_dns,inet_parse,inet_res,
                        inet_tcp,inet_udp,inet_sctp,pg,pg2,raw_file_io,
                        raw_file_io_compressed,raw_file_io_deflate,
                        raw_file_io_delayed,raw_file_io_inflate,
                        raw_file_io_list,seq_trace,socket,standard_error,
                        wrap_log_reader]},
                   {registered,
                       [application_controller,erl_reply,auth,boot_server,
                        code_server,disk_log_server,disk_log_sup,
                        erl_prim_loader,error_logger,file_server_2,
                        fixtable_server,global_group,global_name_server,heart,
                        init,kernel_config,kernel_refc,kernel_sup,logger,
                        logger_handler_watcher,logger_sup,net_kernel,net_sup,
                        rex,user,os_server,ddll_server,erl_epmd,inet_db,pg]},
                   {applications,[]},
                   {optional_applications,[]},
                   {included_applications,[]},
                   {env,
                       [{logger_level,notice},
                        {logger_sasl_compatible,false},
                        {net_tickintensity,4},
                        {net_ticktime,60},
                        {prevent_overlapping_partitions,true},
                        {shell_docs_ansi,auto}]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{kernel,[]}}]}]}},
     {progress,init_kernel_started},
     {apply,
         {application,load,
             [{application,stdlib,
                  [{description,"ERTS  CXC 138 10"},
                   {vsn,"5.0.2"},
                   {id,[]},
                   {modules,
                       [argparse,array,base64,beam_lib,binary,c,calendar,dets,
                        dets_server,dets_sup,dets_utils,dets_v9,dict,digraph,
                        digraph_utils,edlin,edlin_context,edlin_expand,
                        edlin_type_suggestion,epp,eval_bits,erl_abstract_code,
                        erl_anno,erl_bits,erl_compile,erl_error,erl_eval,
                        erl_expand_records,erl_features,erl_internal,erl_lint,
                        erl_parse,erl_posix_msg,erl_pp,erl_scan,
                        erl_stdlib_errors,erl_tar,error_logger_file_h,
                        error_logger_tty_h,escript,ets,file_sorter,filelib,
                        filename,gb_trees,gb_sets,gen,gen_event,gen_fsm,
                        gen_server,gen_statem,io,io_lib,io_lib_format,
                        io_lib_fread,io_lib_pretty,lists,log_mf_h,maps,math,
                        ms_transform,orddict,ordsets,otp_internal,peer,pool,
                        proc_lib,proplists,qlc,qlc_pt,queue,rand,random,re,
                        sets,shell,shell_default,shell_docs,slave,sofs,string,
                        supervisor,supervisor_bridge,sys,timer,unicode,
                        unicode_util,uri_string,win32reg,zip]},
                   {registered,
                       [timer_server,rsh_starter,take_over_monitor,
                        pool_master,dets]},
                   {applications,[kernel]},
                   {optional_applications,[]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,compiler,
                  [{description,"ERTS  CXC 138 10"},
                   {vsn,"8.3.2"},
                   {id,[]},
                   {modules,
                       [beam_a,beam_asm,beam_bounds,beam_block,
                        beam_call_types,beam_clean,beam_dict,beam_digraph,
                        beam_disasm,beam_flatten,beam_jump,beam_kernel_to_ssa,
                        beam_listing,beam_opcodes,beam_ssa,beam_ssa_alias,
                        beam_ssa_bc_size,beam_ssa_bool,beam_ssa_bsm,
                        beam_ssa_check,beam_ssa_codegen,beam_ssa_dead,
                        beam_ssa_lint,beam_ssa_opt,beam_ssa_pp,
                        beam_ssa_pre_codegen,beam_ssa_private_append,
                        beam_ssa_recv,beam_ssa_share,beam_ssa_throw,
                        beam_ssa_type,beam_trim,beam_types,beam_utils,
                        beam_validator,beam_z,cerl,cerl_clauses,cerl_inline,
                        cerl_trees,compile,core_scan,core_lint,core_parse,
                        core_pp,core_lib,erl_bifs,rec_env,sys_core_alias,
                        sys_core_bsm,sys_core_fold,sys_core_fold_lists,
                        sys_core_inline,sys_core_prepare,sys_messages,
                        sys_pre_attributes,v3_core,v3_kernel,v3_kernel_pp]},
                   {registered,[]},
                   {applications,[kernel,stdlib]},
                   {optional_applications,[]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,elixir,
                  [{description,"elixir"},
                   {vsn,"1.15.4"},
                   {id,[]},
                   {modules,
                       ['Elixir.Access','Elixir.Agent.Server','Elixir.Agent',
                        'Elixir.Application','Elixir.ArgumentError',
                        'Elixir.ArithmeticError','Elixir.Atom',
                        'Elixir.BadArityError','Elixir.BadBooleanError',
                        'Elixir.BadFunctionError','Elixir.BadMapError',
                        'Elixir.BadStructError','Elixir.Base',
                        'Elixir.Behaviour','Elixir.Bitwise',
                        'Elixir.Calendar.ISO',
                        'Elixir.Calendar.TimeZoneDatabase',
                        'Elixir.Calendar.UTCOnlyTimeZoneDatabase',
                        'Elixir.Calendar','Elixir.CaseClauseError',
                        'Elixir.Code.Formatter','Elixir.Code.Fragment',
                        'Elixir.Code.Identifier','Elixir.Code.LoadError',
                        'Elixir.Code.Normalizer','Elixir.Code.Typespec',
                        'Elixir.Code','Elixir.Collectable.BitString',
                        'Elixir.Collectable.File.Stream',
                        'Elixir.Collectable.HashDict',
                        'Elixir.Collectable.HashSet',
                        'Elixir.Collectable.IO.Stream',
                        'Elixir.Collectable.List','Elixir.Collectable.Map',
                        'Elixir.Collectable.MapSet','Elixir.Collectable',
                        'Elixir.CompileError','Elixir.CondClauseError',
                        'Elixir.Config.Provider','Elixir.Config.Reader',
                        'Elixir.Config','Elixir.Date.Range','Elixir.Date',
                        'Elixir.DateTime','Elixir.Dict',
                        'Elixir.DynamicSupervisor','Elixir.Enum.EmptyError',
                        'Elixir.Enum.OutOfBoundsError','Elixir.Enum',
                        'Elixir.Enumerable.Date.Range',
                        'Elixir.Enumerable.File.Stream',
                        'Elixir.Enumerable.Function',
                        'Elixir.Enumerable.GenEvent.Stream',
                        'Elixir.Enumerable.HashDict',
                        'Elixir.Enumerable.HashSet',
                        'Elixir.Enumerable.IO.Stream',
                        'Elixir.Enumerable.List','Elixir.Enumerable.Map',
                        'Elixir.Enumerable.MapSet','Elixir.Enumerable.Range',
                        'Elixir.Enumerable.Stream','Elixir.Enumerable',
                        'Elixir.ErlangError','Elixir.Exception',
                        'Elixir.File.CopyError','Elixir.File.Error',
                        'Elixir.File.LinkError','Elixir.File.RenameError',
                        'Elixir.File.Stat','Elixir.File.Stream','Elixir.File',
                        'Elixir.Float','Elixir.Function',
                        'Elixir.FunctionClauseError','Elixir.GenEvent.Stream',
                        'Elixir.GenEvent','Elixir.GenServer',
                        'Elixir.HashDict','Elixir.HashSet',
                        'Elixir.IO.ANSI.Docs','Elixir.IO.ANSI.Sequence',
                        'Elixir.IO.ANSI','Elixir.IO.Stream',
                        'Elixir.IO.StreamError','Elixir.IO',
                        'Elixir.Inspect.Algebra','Elixir.Inspect.Any',
                        'Elixir.Inspect.Atom','Elixir.Inspect.BitString',
                        'Elixir.Inspect.Date.Range','Elixir.Inspect.Date',
                        'Elixir.Inspect.DateTime','Elixir.Inspect.Error',
                        'Elixir.Inspect.Float','Elixir.Inspect.Function',
                        'Elixir.Inspect.HashDict','Elixir.Inspect.HashSet',
                        'Elixir.Inspect.Inspect.Error',
                        'Elixir.Inspect.Integer','Elixir.Inspect.List',
                        'Elixir.Inspect.Macro.Env','Elixir.Inspect.Map',
                        'Elixir.Inspect.MapSet',
                        'Elixir.Inspect.NaiveDateTime','Elixir.Inspect.Opts',
                        'Elixir.Inspect.PID','Elixir.Inspect.Port',
                        'Elixir.Inspect.Range','Elixir.Inspect.Reference',
                        'Elixir.Inspect.Regex','Elixir.Inspect.Stream',
                        'Elixir.Inspect.Time','Elixir.Inspect.Tuple',
                        'Elixir.Inspect.URI',
                        'Elixir.Inspect.Version.Requirement',
                        'Elixir.Inspect.Version','Elixir.Inspect',
                        'Elixir.Integer','Elixir.Kernel.CLI',
                        'Elixir.Kernel.ErrorHandler',
                        'Elixir.Kernel.LexicalTracker',
                        'Elixir.Kernel.ParallelCompiler',
                        'Elixir.Kernel.ParallelRequire',
                        'Elixir.Kernel.SpecialForms','Elixir.Kernel.Typespec',
                        'Elixir.Kernel.TypespecError','Elixir.Kernel.Utils',
                        'Elixir.Kernel','Elixir.KeyError','Elixir.Keyword',
                        'Elixir.List.Chars.Atom',
                        'Elixir.List.Chars.BitString',
                        'Elixir.List.Chars.Float','Elixir.List.Chars.Integer',
                        'Elixir.List.Chars.List','Elixir.List.Chars',
                        'Elixir.List','Elixir.Macro.Env','Elixir.Macro',
                        'Elixir.Map','Elixir.MapSet','Elixir.MatchError',
                        'Elixir.Module.LocalsTracker',
                        'Elixir.Module.ParallelChecker',
                        'Elixir.Module.Types.Behaviour',
                        'Elixir.Module.Types.Error',
                        'Elixir.Module.Types.Expr',
                        'Elixir.Module.Types.Helpers',
                        'Elixir.Module.Types.Of',
                        'Elixir.Module.Types.Pattern',
                        'Elixir.Module.Types.Unify','Elixir.Module.Types',
                        'Elixir.Module','Elixir.NaiveDateTime','Elixir.Node',
                        'Elixir.OptionParser.ParseError',
                        'Elixir.OptionParser','Elixir.PartitionSupervisor',
                        'Elixir.Path.Wildcard','Elixir.Path','Elixir.Port',
                        'Elixir.Process','Elixir.Protocol.UndefinedError',
                        'Elixir.Protocol','Elixir.Range',
                        'Elixir.Record.Extractor','Elixir.Record',
                        'Elixir.Regex.CompileError','Elixir.Regex',
                        'Elixir.Registry.Partition',
                        'Elixir.Registry.Supervisor','Elixir.Registry',
                        'Elixir.RuntimeError','Elixir.Set',
                        'Elixir.Stream.Reducers','Elixir.Stream',
                        'Elixir.String.Break','Elixir.String.Chars.Atom',
                        'Elixir.String.Chars.BitString',
                        'Elixir.String.Chars.Date',
                        'Elixir.String.Chars.DateTime',
                        'Elixir.String.Chars.Float',
                        'Elixir.String.Chars.Integer',
                        'Elixir.String.Chars.List',
                        'Elixir.String.Chars.NaiveDateTime',
                        'Elixir.String.Chars.Time','Elixir.String.Chars.URI',
                        'Elixir.String.Chars.Version.Requirement',
                        'Elixir.String.Chars.Version','Elixir.String.Chars',
                        'Elixir.String.Tokenizer.ScriptSet',
                        'Elixir.String.Tokenizer.Security',
                        'Elixir.String.Tokenizer','Elixir.String.Unicode',
                        'Elixir.String','Elixir.StringIO',
                        'Elixir.Supervisor.Default','Elixir.Supervisor.Spec',
                        'Elixir.Supervisor','Elixir.SyntaxError',
                        'Elixir.System.EnvError',
                        'Elixir.System.SignalHandler','Elixir.System',
                        'Elixir.SystemLimitError','Elixir.Task.Supervised',
                        'Elixir.Task.Supervisor','Elixir.Task','Elixir.Time',
                        'Elixir.TokenMissingError','Elixir.TryClauseError',
                        'Elixir.Tuple','Elixir.URI.Error','Elixir.URI',
                        'Elixir.UndefinedFunctionError',
                        'Elixir.UnicodeConversionError',
                        'Elixir.Version.InvalidRequirementError',
                        'Elixir.Version.InvalidVersionError',
                        'Elixir.Version.Parser','Elixir.Version.Requirement',
                        'Elixir.Version','Elixir.WithClauseError',elixir,
                        elixir_aliases,elixir_bitstring,elixir_bootstrap,
                        elixir_clauses,elixir_code_server,elixir_compiler,
                        elixir_config,elixir_def,elixir_dispatch,elixir_env,
                        elixir_erl,elixir_erl_clauses,elixir_erl_compiler,
                        elixir_erl_for,elixir_erl_pass,elixir_erl_try,
                        elixir_erl_var,elixir_errors,elixir_expand,elixir_fn,
                        elixir_import,elixir_interpolation,elixir_lexical,
                        elixir_locals,elixir_map,elixir_module,
                        elixir_overridable,elixir_parser,elixir_quote,
                        elixir_rewrite,elixir_sup,elixir_tokenizer,
                        elixir_utils]},
                   {registered,[elixir_sup,elixir_config,elixir_code_server]},
                   {applications,[kernel,stdlib,compiler]},
                   {optional_applications,[]},
                   {included_applications,[]},
                   {env,
                       [{ansi_syntax_colors,
                            [{atom,cyan},
                             {binary,default_color},
                             {boolean,magenta},
                             {charlist,yellow},
                             {list,default_color},
                             {map,default_color},
                             {nil,magenta},
                             {number,yellow},
                             {string,green},
                             {tuple,default_color},
                             {variable,light_cyan},
                             {call,default_color},
                             {operator,default_color}]},
                        {check_endianness,true},
                        {dbg_callback,{'Elixir.Macro',dbg,[]}},
                        {time_zone_database,
                            'Elixir.Calendar.UTCOnlyTimeZoneDatabase'}]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{elixir,[]}}]}]}},
     {apply,
         {application,load,
             [{application,sasl,
                  [{description,"SASL  CXC 138 11"},
                   {vsn,"4.2.1"},
                   {id,[]},
                   {modules,
                       [sasl,alarm_handler,format_lib_supp,misc_supp,rb,
                        rb_format_supp,release_handler,release_handler_1,
                        erlsrv,sasl_report,sasl_report_tty_h,
                        sasl_report_file_h,systools,systools_make,systools_rc,
                        systools_relup,systools_lib]},
                   {registered,[sasl_sup,alarm_handler,release_handler]},
                   {applications,[kernel,stdlib]},
                   {optional_applications,[]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{sasl,[]}}]}]}},
     {apply,
         {application,load,
             [{application,logger,
                  [{description,"logger"},
                   {vsn,"1.15.4"},
                   {id,[]},
                   {modules,
                       ['Elixir.Logger','Elixir.Logger.App',
                        'Elixir.Logger.Backends.Config',
                        'Elixir.Logger.Backends.Console',
                        'Elixir.Logger.Backends.Handler',
                        'Elixir.Logger.Backends.Internal',
                        'Elixir.Logger.Backends.Supervisor',
                        'Elixir.Logger.Backends.Watcher',
                        'Elixir.Logger.Formatter','Elixir.Logger.Translator',
                        'Elixir.Logger.Utils']},
                   {registered,['Elixir.Logger','Elixir.Logger.Supervisor']},
                   {applications,[kernel,stdlib,elixir]},
                   {optional_applications,[]},
                   {included_applications,[]},
                   {env,
                       [{utc_log,false},
                        {truncate,8096},
                        {translators,[{'Elixir.Logger.Translator',translate}]},
                        {handle_otp_reports,true},
                        {handle_sasl_reports,false},
                        {always_evaluate_messages,false},
                        {compile_time_purge_matching,[]},
                        {compile_time_application,nil},
                        {translator_inspect_opts,[]},
                        {start_options,[]},
                        {sync_threshold,20},
                        {discard_threshold,500},
                        {discard_threshold_periodic_check,30000},
                        {metadata,[]}]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{'Elixir.Logger.App',[]}}]}]}},
     {apply,
         {application,load,
             [{application,castore,
                  [{description,"Up-to-date CA certificate store."},
                   {vsn,"1.0.5"},
                   {id,[]},
                   {modules,['Elixir.CAStore']},
                   {registered,[]},
                   {applications,[kernel,stdlib,elixir,logger]},
                   {optional_applications,[]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,inets,
                  [{description,"INETS  CXC 138 49"},
                   {vsn,"9.0.1"},
                   {id,[]},
                   {modules,
                       [inets,inets_sup,inets_app,inets_service,inets_trace,
                        inets_lib,httpc,httpc_handler,httpc_handler_sup,
                        httpc_manager,httpc_profile_sup,httpc_request,
                        httpc_response,httpc_sup,httpc_cookie,http_chunk,
                        http_request,http_response,http_transport,http_util,
                        http_uri,httpd,httpd_acceptor,httpd_acceptor_sup,
                        httpd_cgi,httpd_connection_sup,httpd_conf,
                        httpd_custom,httpd_custom_api,httpd_esi,httpd_example,
                        httpd_file,httpd_instance_sup,httpd_log,httpd_logger,
                        httpd_manager,httpd_misc_sup,httpd_request,
                        httpd_request_handler,httpd_response,httpd_script_env,
                        httpd_socket,httpd_sup,httpd_util,mod_actions,
                        mod_alias,mod_auth,mod_auth_dets,mod_auth_mnesia,
                        mod_auth_plain,mod_auth_server,mod_cgi,mod_dir,
                        mod_disk_log,mod_esi,mod_get,mod_head,mod_log,
                        mod_range,mod_responsecontrol,mod_security,
                        mod_security_server,mod_trace]},
                   {registered,[inets_sup,httpc_manager]},
                   {applications,[kernel,stdlib]},
                   {optional_applications,[]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{inets_app,[]}}]}]}},
     {apply,
         {application,load,
             [{application,decimal,
                  [{description,"Arbitrary precision decimal arithmetic."},
                   {vsn,"2.1.1"},
                   {id,[]},
                   {modules,
                       ['Elixir.Decimal','Elixir.Decimal.Context',
                        'Elixir.Decimal.Error','Elixir.Decimal.Macros',
                        'Elixir.Inspect.Decimal',
                        'Elixir.String.Chars.Decimal']},
                   {registered,[]},
                   {applications,[kernel,stdlib,elixir]},
                   {optional_applications,[]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,jason,
                  [{description,
                       "A blazing fast JSON parser and generator in pure Elixir.\n"},
                   {vsn,"1.4.1"},
                   {id,[]},
                   {modules,
                       ['Elixir.Enumerable.Jason.OrderedObject',
                        'Elixir.Jason','Elixir.Jason.Codegen',
                        'Elixir.Jason.DecodeError','Elixir.Jason.Decoder',
                        'Elixir.Jason.Decoder.Unescape','Elixir.Jason.Encode',
                        'Elixir.Jason.EncodeError','Elixir.Jason.Encoder',
                        'Elixir.Jason.Encoder.Any',
                        'Elixir.Jason.Encoder.Atom',
                        'Elixir.Jason.Encoder.BitString',
                        'Elixir.Jason.Encoder.Date',
                        'Elixir.Jason.Encoder.DateTime',
                        'Elixir.Jason.Encoder.Decimal',
                        'Elixir.Jason.Encoder.Float',
                        'Elixir.Jason.Encoder.Integer',
                        'Elixir.Jason.Encoder.Jason.Fragment',
                        'Elixir.Jason.Encoder.Jason.OrderedObject',
                        'Elixir.Jason.Encoder.List',
                        'Elixir.Jason.Encoder.Map',
                        'Elixir.Jason.Encoder.NaiveDateTime',
                        'Elixir.Jason.Encoder.Time','Elixir.Jason.Formatter',
                        'Elixir.Jason.Fragment','Elixir.Jason.Helpers',
                        'Elixir.Jason.OrderedObject','Elixir.Jason.Sigil']},
                   {registered,[]},
                   {applications,[kernel,stdlib,elixir,decimal]},
                   {optional_applications,[decimal]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,crypto,
                  [{description,"CRYPTO"},
                   {vsn,"5.2"},
                   {id,[]},
                   {modules,[crypto,crypto_ec_curves]},
                   {registered,[]},
                   {applications,[kernel,stdlib]},
                   {optional_applications,[]},
                   {included_applications,[]},
                   {env,[{fips_mode,false},{rand_cache_size,896}]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,asn1,
                  [{description,"The Erlang ASN1 compiler version 5.1"},
                   {vsn,"5.1"},
                   {id,[]},
                   {modules,[asn1rt_nif]},
                   {registered,[asn1_ns,asn1db]},
                   {applications,[kernel,stdlib]},
                   {optional_applications,[]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,public_key,
                  [{description,"Public key infrastructure"},
                   {vsn,"1.14"},
                   {id,[]},
                   {modules,
                       [public_key,pubkey_pem,pubkey_pbe,pubkey_ssh,
                        pubkey_cert,pubkey_cert_records,pubkey_crl,
                        pubkey_ocsp,pubkey_os_cacerts,'OTP-PUB-KEY',
                        'PKCS-FRAME']},
                   {registered,[]},
                   {applications,[kernel,stdlib,asn1,crypto]},
                   {optional_applications,[]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,ssl,
                  [{description,"Erlang/OTP SSL application"},
                   {vsn,"11.0.2"},
                   {id,[]},
                   {modules,
                       [tls_connection,tls_client_connection_1_3,
                        tls_server_connection_1_3,tls_gen_connection_1_3,
                        tls_handshake,tls_handshake_1_3,tls_record,
                        tls_record_1_3,tls_socket,tls_v1,tls_connection_sup,
                        tls_gen_connection,tls_sender,tls_server_sup,
                        tls_server_session_ticket_sup,
                        tls_server_session_ticket,tls_sup,
                        tls_dyn_connection_sup,ssl_dh_groups,dtls_connection,
                        dtls_handshake,dtls_record,dtls_socket,dtls_v1,
                        dtls_connection_sup,dtls_gen_connection,
                        dtls_packet_demux,dtls_listener_sup,dtls_sup,
                        dtls_server_sup,dtls_server_session_cache_sup,ssl,
                        ssl_session_cache_api,tls_dtls_connection,ssl_config,
                        ssl_gen_statem,ssl_handshake,ssl_record,ssl_cipher,
                        ssl_cipher_format,ssl_srp_primes,ssl_alert,
                        ssl_listen_tracker_sup,tls_bloom_filter,
                        tls_client_ticket_store,inet_tls_dist,inet6_tls_dist,
                        ssl_dist_sup,ssl_dist_connection_sup,
                        ssl_dist_admin_sup,tls_dist_sup,tls_dist_server_sup,
                        ssl_session,ssl_client_session_cache_db,
                        ssl_server_session_cache,ssl_server_session_cache_db,
                        ssl_server_session_cache_sup,
                        ssl_upgrade_server_session_cache_sup,ssl_manager,
                        ssl_pem_cache,ssl_pkix_db,ssl_certificate,ssl_crl,
                        ssl_crl_cache,ssl_crl_cache_api,ssl_crl_hash_dir,
                        ssl_logger,ssl_trace,ssl_app,ssl_sup,ssl_admin_sup,
                        ssl_connection_sup]},
                   {registered,[ssl_sup,ssl_manager]},
                   {applications,[kernel,stdlib,crypto,public_key]},
                   {optional_applications,[]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{ssl_app,[]}}]}]}},
     {apply,
         {application,load,
             [{application,esbuild,
                  [{description,
                       "Mix tasks for installing and invoking esbuild"},
                   {vsn,"0.8.1"},
                   {id,[]},
                   {modules,
                       ['Elixir.Esbuild','Elixir.Esbuild.NpmRegistry',
                        'Elixir.Mix.Tasks.Esbuild',
                        'Elixir.Mix.Tasks.Esbuild.Install']},
                   {registered,[]},
                   {applications,
                       [kernel,stdlib,elixir,castore,inets,jason,logger,ssl]},
                   {optional_applications,[inets,ssl]},
                   {included_applications,[]},
                   {env,[{default,[]}]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{'Elixir.Esbuild',[]}}]}]}},
     {apply,
         {application,load,
             [{application,expo,
                  [{description,
                       "Low-level Gettext file handling (.po/.pot/.mo file writer and parser)."},
                   {vsn,"0.5.1"},
                   {id,[]},
                   {modules,
                       ['Elixir.Expo.MO','Elixir.Expo.MO.Composer',
                        'Elixir.Expo.MO.InvalidFileError',
                        'Elixir.Expo.MO.Parser',
                        'Elixir.Expo.MO.UnsupportedVersionError',
                        'Elixir.Expo.Message','Elixir.Expo.Message.Plural',
                        'Elixir.Expo.Message.Singular','Elixir.Expo.Messages',
                        'Elixir.Expo.PO','Elixir.Expo.PO.Composer',
                        'Elixir.Expo.PO.DuplicateMessagesError',
                        'Elixir.Expo.PO.Parser','Elixir.Expo.PO.SyntaxError',
                        'Elixir.Expo.PO.Tokenizer','Elixir.Expo.PluralForms',
                        'Elixir.Expo.PluralForms.Known',
                        'Elixir.Expo.PluralForms.SyntaxError',
                        'Elixir.Expo.PluralForms.Tokenizer',
                        'Elixir.Expo.Util',
                        'Elixir.Inspect.Expo.Message.Plural',
                        'Elixir.Inspect.Expo.Message.Singular',
                        'Elixir.Inspect.Expo.PluralForms',
                        'Elixir.Mix.Tasks.Expo.Msgfmt',
                        'Elixir.Mix.Tasks.Expo.Msguniq',
                        expo_plural_forms_parser,expo_po_parser]},
                   {registered,[]},
                   {applications,[kernel,stdlib,elixir]},
                   {optional_applications,[]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,gettext,
                  [{description,
                       "Internationalization and localization through gettext"},
                   {vsn,"0.24.0"},
                   {id,[]},
                   {modules,
                       ['Elixir.Gettext','Elixir.Gettext.Application',
                        'Elixir.Gettext.Backend','Elixir.Gettext.Compiler',
                        'Elixir.Gettext.Error','Elixir.Gettext.Extractor',
                        'Elixir.Gettext.ExtractorAgent',
                        'Elixir.Gettext.Fuzzy','Elixir.Gettext.Interpolation',
                        'Elixir.Gettext.Interpolation.Default',
                        'Elixir.Gettext.Merger',
                        'Elixir.Gettext.MissingBindingsError',
                        'Elixir.Gettext.Plural',
                        'Elixir.Gettext.Plural.UnknownLocaleError',
                        'Elixir.Gettext.PluralFormError',
                        'Elixir.Mix.Tasks.Compile.Gettext',
                        'Elixir.Mix.Tasks.Gettext.Extract',
                        'Elixir.Mix.Tasks.Gettext.Merge']},
                   {registered,[]},
                   {applications,[kernel,stdlib,elixir,expo,logger]},
                   {optional_applications,[]},
                   {included_applications,[]},
                   {env,
                       [{default_locale,<<"en">>},
                        {plural_forms,'Elixir.Gettext.Plural'}]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{'Elixir.Gettext.Application',[]}}]}]}},
     {apply,
         {application,load,
             [{application,number,
                  [{description,
                       "Convert numbers to various string formats, such as currency"},
                   {vsn,"1.0.4"},
                   {id,[]},
                   {modules,
                       ['Elixir.Number','Elixir.Number.Conversion',
                        'Elixir.Number.Conversion.BitString',
                        'Elixir.Number.Conversion.Decimal',
                        'Elixir.Number.Conversion.Float',
                        'Elixir.Number.Conversion.Integer',
                        'Elixir.Number.Currency','Elixir.Number.Decimal',
                        'Elixir.Number.Delimit','Elixir.Number.Human',
                        'Elixir.Number.Macros','Elixir.Number.Percentage',
                        'Elixir.Number.Phone','Elixir.Number.SI']},
                   {registered,[]},
                   {applications,[kernel,stdlib,elixir,decimal,logger]},
                   {optional_applications,[]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,eex,
                  [{description,"eex"},
                   {vsn,"1.15.4"},
                   {id,[]},
                   {modules,
                       ['Elixir.EEx','Elixir.EEx.Compiler',
                        'Elixir.EEx.Engine','Elixir.EEx.SmartEngine',
                        'Elixir.EEx.SyntaxError']},
                   {registered,[]},
                   {applications,[kernel,stdlib,elixir]},
                   {optional_applications,[]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,phoenix_pubsub,
                  [{description,"Distributed PubSub and Presence platform"},
                   {vsn,"2.1.3"},
                   {id,[]},
                   {modules,
                       ['Elixir.Phoenix.PubSub',
                        'Elixir.Phoenix.PubSub.Adapter',
                        'Elixir.Phoenix.PubSub.Application',
                        'Elixir.Phoenix.PubSub.BroadcastError',
                        'Elixir.Phoenix.PubSub.PG2',
                        'Elixir.Phoenix.PubSub.PG2Worker',
                        'Elixir.Phoenix.PubSub.Supervisor',
                        'Elixir.Phoenix.Tracker',
                        'Elixir.Phoenix.Tracker.Clock',
                        'Elixir.Phoenix.Tracker.DeltaGeneration',
                        'Elixir.Phoenix.Tracker.Replica',
                        'Elixir.Phoenix.Tracker.Shard',
                        'Elixir.Phoenix.Tracker.State']},
                   {registered,[]},
                   {applications,[kernel,stdlib,elixir,crypto,logger]},
                   {optional_applications,[]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{'Elixir.Phoenix.PubSub.Application',[]}}]}]}},
     {apply,
         {application,load,
             [{application,mime,
                  [{description,"A MIME type module for Elixir"},
                   {vsn,"2.0.5"},
                   {id,[]},
                   {modules,['Elixir.MIME']},
                   {registered,[]},
                   {applications,[kernel,stdlib,elixir,logger]},
                   {optional_applications,[]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,plug_crypto,
                  [{description,"Crypto-related functionality for the web"},
                   {vsn,"2.0.0"},
                   {id,[]},
                   {modules,
                       ['Elixir.Plug.Crypto','Elixir.Plug.Crypto.Application',
                        'Elixir.Plug.Crypto.KeyGenerator',
                        'Elixir.Plug.Crypto.MessageEncryptor',
                        'Elixir.Plug.Crypto.MessageVerifier']},
                   {registered,[]},
                   {applications,[kernel,stdlib,elixir,crypto]},
                   {optional_applications,[]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{'Elixir.Plug.Crypto.Application',[]}}]}]}},
     {apply,
         {application,load,
             [{application,telemetry,
                  [{description,
                       "Dynamic dispatching library for metrics and instrumentations"},
                   {vsn,"1.2.1"},
                   {id,[]},
                   {modules,
                       [telemetry,telemetry_app,telemetry_handler_table,
                        telemetry_sup,telemetry_test]},
                   {registered,[]},
                   {applications,[kernel,stdlib]},
                   {optional_applications,[]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{telemetry_app,[]}}]}]}},
     {apply,
         {application,load,
             [{application,plug,
                  [{description,"Compose web applications with functions"},
                   {vsn,"1.15.2"},
                   {id,[]},
                   {modules,
                       ['Elixir.Inspect.Plug.Conn','Elixir.Plug',
                        'Elixir.Plug.Adapters.Cowboy',
                        'Elixir.Plug.Adapters.Test.Conn',
                        'Elixir.Plug.Application',
                        'Elixir.Plug.BadRequestError','Elixir.Plug.BasicAuth',
                        'Elixir.Plug.Builder','Elixir.Plug.CSRFProtection',
                        'Elixir.Plug.CSRFProtection.InvalidCSRFTokenError',
                        'Elixir.Plug.CSRFProtection.InvalidCrossOriginRequestError',
                        'Elixir.Plug.Conn','Elixir.Plug.Conn.Adapter',
                        'Elixir.Plug.Conn.AlreadySentError',
                        'Elixir.Plug.Conn.CookieOverflowError',
                        'Elixir.Plug.Conn.Cookies',
                        'Elixir.Plug.Conn.InvalidHeaderError',
                        'Elixir.Plug.Conn.InvalidQueryError',
                        'Elixir.Plug.Conn.NotSentError',
                        'Elixir.Plug.Conn.Query','Elixir.Plug.Conn.Status',
                        'Elixir.Plug.Conn.Unfetched','Elixir.Plug.Conn.Utils',
                        'Elixir.Plug.Conn.WrapperError',
                        'Elixir.Plug.Debugger','Elixir.Plug.ErrorHandler',
                        'Elixir.Plug.Exception','Elixir.Plug.Exception.Any',
                        'Elixir.Plug.HTML','Elixir.Plug.Head',
                        'Elixir.Plug.Logger','Elixir.Plug.MIME',
                        'Elixir.Plug.MethodOverride','Elixir.Plug.Parsers',
                        'Elixir.Plug.Parsers.BadEncodingError',
                        'Elixir.Plug.Parsers.JSON',
                        'Elixir.Plug.Parsers.MULTIPART',
                        'Elixir.Plug.Parsers.ParseError',
                        'Elixir.Plug.Parsers.RequestTooLargeError',
                        'Elixir.Plug.Parsers.URLENCODED',
                        'Elixir.Plug.Parsers.UnsupportedMediaTypeError',
                        'Elixir.Plug.RequestId','Elixir.Plug.RewriteOn',
                        'Elixir.Plug.Router',
                        'Elixir.Plug.Router.InvalidSpecError',
                        'Elixir.Plug.Router.MalformedURIError',
                        'Elixir.Plug.Router.Utils','Elixir.Plug.SSL',
                        'Elixir.Plug.Session','Elixir.Plug.Session.COOKIE',
                        'Elixir.Plug.Session.ETS','Elixir.Plug.Session.Store',
                        'Elixir.Plug.Static',
                        'Elixir.Plug.Static.InvalidPathError',
                        'Elixir.Plug.Telemetry','Elixir.Plug.Test',
                        'Elixir.Plug.TimeoutError','Elixir.Plug.Upload',
                        'Elixir.Plug.UploadError',plug_multipart]},
                   {registered,[]},
                   {applications,
                       [kernel,stdlib,elixir,eex,logger,mime,plug_crypto,
                        telemetry]},
                   {optional_applications,[]},
                   {included_applications,[]},
                   {env,[{validate_header_keys_during_test,true}]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{'Elixir.Plug.Application',[]}}]}]}},
     {apply,
         {application,load,
             [{application,phoenix_html,
                  [{description,
                       "Phoenix view functions for working with HTML templates"},
                   {vsn,"3.3.3"},
                   {id,[]},
                   {modules,
                       ['Elixir.Phoenix.HTML','Elixir.Phoenix.HTML.Engine',
                        'Elixir.Phoenix.HTML.Form',
                        'Elixir.Phoenix.HTML.FormData',
                        'Elixir.Phoenix.HTML.FormData.Atom',
                        'Elixir.Phoenix.HTML.FormData.Map',
                        'Elixir.Phoenix.HTML.FormData.Plug.Conn',
                        'Elixir.Phoenix.HTML.FormField',
                        'Elixir.Phoenix.HTML.Format',
                        'Elixir.Phoenix.HTML.Link','Elixir.Phoenix.HTML.Safe',
                        'Elixir.Phoenix.HTML.Safe.Atom',
                        'Elixir.Phoenix.HTML.Safe.BitString',
                        'Elixir.Phoenix.HTML.Safe.Date',
                        'Elixir.Phoenix.HTML.Safe.DateTime',
                        'Elixir.Phoenix.HTML.Safe.Float',
                        'Elixir.Phoenix.HTML.Safe.Integer',
                        'Elixir.Phoenix.HTML.Safe.List',
                        'Elixir.Phoenix.HTML.Safe.NaiveDateTime',
                        'Elixir.Phoenix.HTML.Safe.Phoenix.HTML.Form',
                        'Elixir.Phoenix.HTML.Safe.Time',
                        'Elixir.Phoenix.HTML.Safe.Tuple',
                        'Elixir.Phoenix.HTML.Safe.URI',
                        'Elixir.Phoenix.HTML.Tag']},
                   {registered,[]},
                   {applications,[kernel,stdlib,elixir,eex,logger,plug]},
                   {optional_applications,[plug]},
                   {included_applications,[]},
                   {env,
                       [{csrf_token_reader,
                            {'Elixir.Plug.CSRFProtection',get_csrf_token_for,
                                []}}]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,phoenix_template,
                  [{description,"Template rendering for Phoenix"},
                   {vsn,"1.0.4"},
                   {id,[]},
                   {modules,
                       ['Elixir.Phoenix.Template',
                        'Elixir.Phoenix.Template.EExEngine',
                        'Elixir.Phoenix.Template.Engine',
                        'Elixir.Phoenix.Template.ExsEngine']},
                   {registered,[]},
                   {applications,[kernel,stdlib,elixir,eex,phoenix_html]},
                   {optional_applications,[phoenix_html]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,cowlib,
                  [{description,
                       "Support library for manipulating Web protocols."},
                   {vsn,"2.12.1"},
                   {id,[]},
                   {modules,
                       [cow_base64url,cow_cookie,cow_date,cow_hpack,cow_http,
                        cow_http2,cow_http2_machine,cow_http_hd,
                        cow_http_struct_hd,cow_http_te,cow_iolists,cow_link,
                        cow_mimetypes,cow_multipart,cow_qs,cow_spdy,cow_sse,
                        cow_uri,cow_uri_template,cow_ws]},
                   {registered,[]},
                   {applications,[kernel,stdlib,crypto]},
                   {optional_applications,[]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,ranch,
                  [{description,"Socket acceptor pool for TCP protocols."},
                   {vsn,"1.8.0"},
                   {id,[]},
                   {modules,
                       [ranch,ranch_acceptor,ranch_acceptors_sup,ranch_app,
                        ranch_conns_sup,ranch_crc32c,ranch_listener_sup,
                        ranch_protocol,ranch_proxy_header,ranch_server,
                        ranch_ssl,ranch_sup,ranch_tcp,ranch_transport]},
                   {registered,[ranch_sup,ranch_server]},
                   {applications,[kernel,stdlib,ssl]},
                   {optional_applications,[]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{ranch_app,[]}}]}]}},
     {apply,
         {application,load,
             [{application,cowboy,
                  [{description,"Small, fast, modern HTTP server."},
                   {vsn,"2.10.0"},
                   {id,[]},
                   {modules,
                       [cowboy,cowboy_app,cowboy_bstr,cowboy_children,
                        cowboy_clear,cowboy_clock,cowboy_compress_h,
                        cowboy_constraints,cowboy_handler,cowboy_http,
                        cowboy_http2,cowboy_loop,cowboy_metrics_h,
                        cowboy_middleware,cowboy_req,cowboy_rest,
                        cowboy_router,cowboy_static,cowboy_stream,
                        cowboy_stream_h,cowboy_sub_protocol,cowboy_sup,
                        cowboy_tls,cowboy_tracer_h,cowboy_websocket]},
                   {registered,[cowboy_sup,cowboy_clock]},
                   {applications,[kernel,stdlib,cowlib,crypto,ranch]},
                   {optional_applications,[]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{cowboy_app,[]}}]}]}},
     {apply,
         {application,load,
             [{application,cowboy_telemetry,
                  [{description,"Telemetry instrumentation for Cowboy"},
                   {vsn,"0.4.0"},
                   {id,[]},
                   {modules,[cowboy_telemetry_h]},
                   {registered,[]},
                   {applications,[kernel,stdlib,telemetry]},
                   {optional_applications,[]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,plug_cowboy,
                  [{description,"A Plug adapter for Cowboy"},
                   {vsn,"2.6.1"},
                   {id,[]},
                   {modules,
                       ['Elixir.Plug.Cowboy','Elixir.Plug.Cowboy.Conn',
                        'Elixir.Plug.Cowboy.Drainer',
                        'Elixir.Plug.Cowboy.Handler',
                        'Elixir.Plug.Cowboy.Translator']},
                   {registered,[]},
                   {applications,
                       [kernel,stdlib,elixir,cowboy,cowboy_telemetry,logger,
                        plug]},
                   {optional_applications,[]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{'Elixir.Plug.Cowboy',[]}}]}]}},
     {apply,
         {application,load,
             [{application,websock,
                  [{description,"A specification for WebSocket connections"},
                   {vsn,"0.5.3"},
                   {id,[]},
                   {modules,['Elixir.WebSock']},
                   {registered,[]},
                   {applications,[kernel,stdlib,elixir]},
                   {optional_applications,[]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,websock_adapter,
                  [{description,
                       "A set of WebSock adapters for common web servers"},
                   {vsn,"0.5.5"},
                   {id,[]},
                   {modules,
                       ['Elixir.WebSockAdapter',
                        'Elixir.WebSockAdapter.CowboyAdapter',
                        'Elixir.WebSockAdapter.UpgradeError',
                        'Elixir.WebSockAdapter.UpgradeValidation']},
                   {registered,[]},
                   {applications,
                       [kernel,stdlib,elixir,plug,plug_cowboy,websock,bandit]},
                   {optional_applications,[bandit,plug_cowboy]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,phoenix,
                  [{description,"Peace of mind from prototype to production"},
                   {vsn,"1.7.10"},
                   {id,[]},
                   {modules,
                       ['Elixir.Mix.Phoenix','Elixir.Mix.Phoenix.Context',
                        'Elixir.Mix.Phoenix.Schema',
                        'Elixir.Mix.Tasks.Compile.Phoenix',
                        'Elixir.Mix.Tasks.Phx','Elixir.Mix.Tasks.Phx.Digest',
                        'Elixir.Mix.Tasks.Phx.Digest.Clean',
                        'Elixir.Mix.Tasks.Phx.Gen',
                        'Elixir.Mix.Tasks.Phx.Gen.Auth',
                        'Elixir.Mix.Tasks.Phx.Gen.Auth.HashingLibrary',
                        'Elixir.Mix.Tasks.Phx.Gen.Auth.Injector',
                        'Elixir.Mix.Tasks.Phx.Gen.Auth.Migration',
                        'Elixir.Mix.Tasks.Phx.Gen.Cert',
                        'Elixir.Mix.Tasks.Phx.Gen.Channel',
                        'Elixir.Mix.Tasks.Phx.Gen.Context',
                        'Elixir.Mix.Tasks.Phx.Gen.Embedded',
                        'Elixir.Mix.Tasks.Phx.Gen.Html',
                        'Elixir.Mix.Tasks.Phx.Gen.Json',
                        'Elixir.Mix.Tasks.Phx.Gen.Live',
                        'Elixir.Mix.Tasks.Phx.Gen.Notifier',
                        'Elixir.Mix.Tasks.Phx.Gen.Presence',
                        'Elixir.Mix.Tasks.Phx.Gen.Release',
                        'Elixir.Mix.Tasks.Phx.Gen.Schema',
                        'Elixir.Mix.Tasks.Phx.Gen.Secret',
                        'Elixir.Mix.Tasks.Phx.Gen.Socket',
                        'Elixir.Mix.Tasks.Phx.Routes',
                        'Elixir.Mix.Tasks.Phx.Server','Elixir.Phoenix',
                        'Elixir.Phoenix.ActionClauseError',
                        'Elixir.Phoenix.Channel',
                        'Elixir.Phoenix.Channel.Server',
                        'Elixir.Phoenix.ChannelTest',
                        'Elixir.Phoenix.ChannelTest.NoopSerializer',
                        'Elixir.Phoenix.CodeReloader',
                        'Elixir.Phoenix.CodeReloader.Proxy',
                        'Elixir.Phoenix.CodeReloader.Server',
                        'Elixir.Phoenix.Config','Elixir.Phoenix.ConnTest',
                        'Elixir.Phoenix.Controller',
                        'Elixir.Phoenix.Controller.Pipeline',
                        'Elixir.Phoenix.Digester',
                        'Elixir.Phoenix.Digester.Compressor',
                        'Elixir.Phoenix.Digester.Gzip',
                        'Elixir.Phoenix.Endpoint',
                        'Elixir.Phoenix.Endpoint.Cowboy2Adapter',
                        'Elixir.Phoenix.Endpoint.RenderErrors',
                        'Elixir.Phoenix.Endpoint.Supervisor',
                        'Elixir.Phoenix.Endpoint.SyncCodeReloadPlug',
                        'Elixir.Phoenix.Endpoint.Watcher',
                        'Elixir.Phoenix.Flash','Elixir.Phoenix.Logger',
                        'Elixir.Phoenix.MissingParamError',
                        'Elixir.Phoenix.Naming',
                        'Elixir.Phoenix.NotAcceptableError',
                        'Elixir.Phoenix.Param','Elixir.Phoenix.Param.Any',
                        'Elixir.Phoenix.Param.Atom',
                        'Elixir.Phoenix.Param.BitString',
                        'Elixir.Phoenix.Param.Float',
                        'Elixir.Phoenix.Param.Integer',
                        'Elixir.Phoenix.Param.Map','Elixir.Phoenix.Presence',
                        'Elixir.Phoenix.Presence.Tracker',
                        'Elixir.Phoenix.Router',
                        'Elixir.Phoenix.Router.ConsoleFormatter',
                        'Elixir.Phoenix.Router.Helpers',
                        'Elixir.Phoenix.Router.MalformedURIError',
                        'Elixir.Phoenix.Router.NoRouteError',
                        'Elixir.Phoenix.Router.Resource',
                        'Elixir.Phoenix.Router.Route',
                        'Elixir.Phoenix.Router.Scope','Elixir.Phoenix.Socket',
                        'Elixir.Phoenix.Socket.Broadcast',
                        'Elixir.Phoenix.Socket.InvalidMessageError',
                        'Elixir.Phoenix.Socket.Message',
                        'Elixir.Phoenix.Socket.PoolDrainer',
                        'Elixir.Phoenix.Socket.PoolSupervisor',
                        'Elixir.Phoenix.Socket.Reply',
                        'Elixir.Phoenix.Socket.Serializer',
                        'Elixir.Phoenix.Socket.Transport',
                        'Elixir.Phoenix.Socket.V1.JSONSerializer',
                        'Elixir.Phoenix.Socket.V2.JSONSerializer',
                        'Elixir.Phoenix.Token',
                        'Elixir.Phoenix.Transports.LongPoll',
                        'Elixir.Phoenix.Transports.LongPoll.Server',
                        'Elixir.Phoenix.Transports.WebSocket',
                        'Elixir.Phoenix.VerifiedRoutes',
                        'Elixir.Plug.Exception.Phoenix.ActionClauseError']},
                   {registered,[]},
                   {applications,
                       [kernel,stdlib,elixir,castore,crypto,eex,jason,logger,
                        phoenix_pubsub,phoenix_template,plug,plug_cowboy,
                        plug_crypto,public_key,telemetry,websock_adapter,
                        phoenix_view]},
                   {optional_applications,[phoenix_view,plug_cowboy,jason]},
                   {included_applications,[]},
                   {env,
                       [{logger,true},
                        {stacktrace_depth,nil},
                        {filter_parameters,[<<"password">>]},
                        {serve_endpoints,false},
                        {gzippable_exts,
                            [<<".js">>,<<".map">>,<<".css">>,<<".txt">>,
                             <<".text">>,<<".html">>,<<".json">>,<<".svg">>,
                             <<".eot">>,<<".ttf">>]},
                        {static_compressors,
                            ['Elixir.Phoenix.Digester.Gzip']}]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{'Elixir.Phoenix',[]}}]}]}},
     {apply,
         {application,load,
             [{application,phoenix_live_view,
                  [{description,
                       "Rich, real-time user experiences with server-rendered HTML\n"},
                   {vsn,"0.19.5"},
                   {id,[]},
                   {modules,
                       ['Elixir.Enumerable.Phoenix.LiveView.LiveStream',
                        'Elixir.Inspect.Phoenix.LiveView.Socket',
                        'Elixir.Inspect.Phoenix.LiveView.Socket.AssignsNotInSocket',
                        'Elixir.Inspect.Phoenix.LiveView.UploadConfig',
                        'Elixir.Inspect.Phoenix.LiveViewTest.Element',
                        'Elixir.Inspect.Phoenix.LiveViewTest.Upload',
                        'Elixir.Inspect.Phoenix.LiveViewTest.View',
                        'Elixir.Phoenix.Component',
                        'Elixir.Phoenix.Component.Declarative',
                        'Elixir.Phoenix.HTML.Safe.Phoenix.LiveComponent.CID',
                        'Elixir.Phoenix.HTML.Safe.Phoenix.LiveView.Component',
                        'Elixir.Phoenix.HTML.Safe.Phoenix.LiveView.Comprehension',
                        'Elixir.Phoenix.HTML.Safe.Phoenix.LiveView.JS',
                        'Elixir.Phoenix.HTML.Safe.Phoenix.LiveView.Rendered',
                        'Elixir.Phoenix.LiveComponent',
                        'Elixir.Phoenix.LiveComponent.CID',
                        'Elixir.Phoenix.LiveView',
                        'Elixir.Phoenix.LiveView.Application',
                        'Elixir.Phoenix.LiveView.Channel',
                        'Elixir.Phoenix.LiveView.Component',
                        'Elixir.Phoenix.LiveView.Comprehension',
                        'Elixir.Phoenix.LiveView.Controller',
                        'Elixir.Phoenix.LiveView.Diff',
                        'Elixir.Phoenix.LiveView.Engine',
                        'Elixir.Phoenix.LiveView.HTMLAlgebra',
                        'Elixir.Phoenix.LiveView.HTMLEngine',
                        'Elixir.Phoenix.LiveView.HTMLFormatter',
                        'Elixir.Phoenix.LiveView.Helpers',
                        'Elixir.Phoenix.LiveView.JS',
                        'Elixir.Phoenix.LiveView.Lifecycle',
                        'Elixir.Phoenix.LiveView.LiveStream',
                        'Elixir.Phoenix.LiveView.Logger',
                        'Elixir.Phoenix.LiveView.Plug',
                        'Elixir.Phoenix.LiveView.Rendered',
                        'Elixir.Phoenix.LiveView.Renderer',
                        'Elixir.Phoenix.LiveView.Route',
                        'Elixir.Phoenix.LiveView.Router',
                        'Elixir.Phoenix.LiveView.Session',
                        'Elixir.Phoenix.LiveView.Socket',
                        'Elixir.Phoenix.LiveView.Socket.AssignsNotInSocket',
                        'Elixir.Phoenix.LiveView.Static',
                        'Elixir.Phoenix.LiveView.TagEngine',
                        'Elixir.Phoenix.LiveView.Tokenizer',
                        'Elixir.Phoenix.LiveView.Tokenizer.ParseError',
                        'Elixir.Phoenix.LiveView.Upload',
                        'Elixir.Phoenix.LiveView.UploadChannel',
                        'Elixir.Phoenix.LiveView.UploadConfig',
                        'Elixir.Phoenix.LiveView.UploadEntry',
                        'Elixir.Phoenix.LiveView.UploadTmpFileWriter',
                        'Elixir.Phoenix.LiveView.UploadWriter',
                        'Elixir.Phoenix.LiveView.Utils',
                        'Elixir.Phoenix.LiveViewTest',
                        'Elixir.Phoenix.LiveViewTest.ClientProxy',
                        'Elixir.Phoenix.LiveViewTest.DOM',
                        'Elixir.Phoenix.LiveViewTest.Element',
                        'Elixir.Phoenix.LiveViewTest.Upload',
                        'Elixir.Phoenix.LiveViewTest.UploadClient',
                        'Elixir.Phoenix.LiveViewTest.View',
                        'Elixir.String.Chars.Phoenix.LiveComponent.CID']},
                   {registered,[]},
                   {applications,
                       [kernel,stdlib,elixir,jason,logger,phoenix,
                        phoenix_html,phoenix_template,telemetry,phoenix_view]},
                   {optional_applications,[phoenix_view,jason]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{'Elixir.Phoenix.LiveView.Application',[]}}]}]}},
     {apply,
         {application,load,
             [{application,telemetry_metrics,
                  [{description,
                       "Provides a common interface for defining metrics based on Telemetry events.\n"},
                   {vsn,"0.6.2"},
                   {id,[]},
                   {modules,
                       ['Elixir.Telemetry.Metrics',
                        'Elixir.Telemetry.Metrics.ConsoleReporter',
                        'Elixir.Telemetry.Metrics.Counter',
                        'Elixir.Telemetry.Metrics.Distribution',
                        'Elixir.Telemetry.Metrics.LastValue',
                        'Elixir.Telemetry.Metrics.Sum',
                        'Elixir.Telemetry.Metrics.Summary']},
                   {registered,[]},
                   {applications,[kernel,stdlib,elixir,logger,telemetry]},
                   {optional_applications,[]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,phoenix_live_dashboard,
                  [{description,"Real-time performance dashboard for Phoenix"},
                   {vsn,"0.8.3"},
                   {id,[]},
                   {modules,
                       ['Elixir.Inspect.Phoenix.LiveDashboard.PageLive',
                        'Elixir.Phoenix.LiveDashboard',
                        'Elixir.Phoenix.LiveDashboard.AppInfoComponent',
                        'Elixir.Phoenix.LiveDashboard.Application',
                        'Elixir.Phoenix.LiveDashboard.ApplicationsPage',
                        'Elixir.Phoenix.LiveDashboard.Assets',
                        'Elixir.Phoenix.LiveDashboard.ChartComponent',
                        'Elixir.Phoenix.LiveDashboard.EctoStatsPage',
                        'Elixir.Phoenix.LiveDashboard.EtsInfoComponent',
                        'Elixir.Phoenix.LiveDashboard.EtsPage',
                        'Elixir.Phoenix.LiveDashboard.Helpers',
                        'Elixir.Phoenix.LiveDashboard.HomePage',
                        'Elixir.Phoenix.LiveDashboard.LayeredGraphComponent',
                        'Elixir.Phoenix.LiveDashboard.LayeredGraphComponent.Arrow',
                        'Elixir.Phoenix.LiveDashboard.LayeredGraphComponent.Circle',
                        'Elixir.Phoenix.LiveDashboard.LayoutView',
                        'Elixir.Phoenix.LiveDashboard.LoggerPubSubBackend',
                        'Elixir.Phoenix.LiveDashboard.MemoryAllocatorsPage',
                        'Elixir.Phoenix.LiveDashboard.MetricsPage',
                        'Elixir.Phoenix.LiveDashboard.ModalComponent',
                        'Elixir.Phoenix.LiveDashboard.NavBarComponent',
                        'Elixir.Phoenix.LiveDashboard.OSMonPage',
                        'Elixir.Phoenix.LiveDashboard.PageBuilder',
                        'Elixir.Phoenix.LiveDashboard.PageLive',
                        'Elixir.Phoenix.LiveDashboard.PageNotFound',
                        'Elixir.Phoenix.LiveDashboard.PortInfoComponent',
                        'Elixir.Phoenix.LiveDashboard.PortsPage',
                        'Elixir.Phoenix.LiveDashboard.ProcessInfoComponent',
                        'Elixir.Phoenix.LiveDashboard.ProcessesPage',
                        'Elixir.Phoenix.LiveDashboard.ReingoldTilford',
                        'Elixir.Phoenix.LiveDashboard.ReingoldTilford.Line',
                        'Elixir.Phoenix.LiveDashboard.ReingoldTilford.Node',
                        'Elixir.Phoenix.LiveDashboard.RequestLogger',
                        'Elixir.Phoenix.LiveDashboard.RequestLoggerPage',
                        'Elixir.Phoenix.LiveDashboard.Router',
                        'Elixir.Phoenix.LiveDashboard.SocketInfoComponent',
                        'Elixir.Phoenix.LiveDashboard.SocketsPage',
                        'Elixir.Phoenix.LiveDashboard.SystemInfo',
                        'Elixir.Phoenix.LiveDashboard.SystemInfo.PortDetails',
                        'Elixir.Phoenix.LiveDashboard.SystemInfo.ProcessDetails',
                        'Elixir.Phoenix.LiveDashboard.TableComponent',
                        'Elixir.Phoenix.LiveDashboard.TelemetryListener',
                        'Elixir.Phoenix.LiveDashboard.TitleBarComponent',
                        'Elixir.Phoenix.LiveDashboard.Web']},
                   {registered,[]},
                   {applications,
                       [kernel,stdlib,elixir,logger,mime,phoenix_live_view,
                        telemetry_metrics,ecto_psql_extras,ecto_mysql_extras,
                        ecto_sqlite3_extras,ecto]},
                   {optional_applications,
                       [ecto_psql_extras,ecto_mysql_extras,
                        ecto_sqlite3_extras,ecto]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{'Elixir.Phoenix.LiveDashboard.Application',[]}}]}]}},
     {apply,
         {application,load,
             [{application,file_system,
                  [{description,
                       "A file system change watcher wrapper based on [fs](https://github.com/synrc/fs)"},
                   {vsn,"0.2.10"},
                   {id,[]},
                   {modules,
                       ['Elixir.FileSystem','Elixir.FileSystem.Backend',
                        'Elixir.FileSystem.Backends.FSInotify',
                        'Elixir.FileSystem.Backends.FSMac',
                        'Elixir.FileSystem.Backends.FSPoll',
                        'Elixir.FileSystem.Backends.FSWindows',
                        'Elixir.FileSystem.Worker']},
                   {registered,[]},
                   {applications,[kernel,stdlib,elixir,logger]},
                   {optional_applications,[]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,phoenix_live_reload,
                  [{description,
                       "Provides live-reload functionality for Phoenix"},
                   {vsn,"1.4.1"},
                   {id,[]},
                   {modules,
                       ['Elixir.Phoenix.LiveReloader',
                        'Elixir.Phoenix.LiveReloader.Application',
                        'Elixir.Phoenix.LiveReloader.Channel',
                        'Elixir.Phoenix.LiveReloader.Socket']},
                   {registered,[]},
                   {applications,
                       [kernel,stdlib,elixir,file_system,logger,phoenix]},
                   {optional_applications,[]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{'Elixir.Phoenix.LiveReloader.Application',[]}}]}]}},
     {apply,
         {application,load,
             [{application,runtime_tools,
                  [{description,"RUNTIME_TOOLS"},
                   {vsn,"2.0"},
                   {id,[]},
                   {modules,
                       [appmon_info,dbg,observer_backend,runtime_tools,
                        runtime_tools_sup,erts_alloc_config,ttb_autostart,
                        dyntrace,system_information,scheduler,instrument,
                        msacc]},
                   {registered,[runtime_tools_sup]},
                   {applications,[kernel,stdlib]},
                   {optional_applications,[]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{runtime_tools,[]}}]}]}},
     {apply,
         {application,load,
             [{application,tailwind,
                  [{description,
                       "Mix tasks for installing and invoking tailwind"},
                   {vsn,"0.2.2"},
                   {id,[]},
                   {modules,
                       ['Elixir.Mix.Tasks.Tailwind',
                        'Elixir.Mix.Tasks.Tailwind.Install',
                        'Elixir.Tailwind']},
                   {registered,[]},
                   {applications,
                       [kernel,stdlib,elixir,castore,inets,logger,ssl]},
                   {optional_applications,[inets,ssl]},
                   {included_applications,[]},
                   {env,[{default,[]}]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{'Elixir.Tailwind',[]}}]}]}},
     {apply,
         {application,load,
             [{application,telemetry_poller,
                  [{description,
                       "Periodically collect measurements and dispatch them as Telemetry events."},
                   {vsn,"1.0.0"},
                   {id,[]},
                   {modules,
                       [telemetry_poller,telemetry_poller_app,
                        telemetry_poller_builtin,telemetry_poller_sup]},
                   {registered,[]},
                   {applications,[kernel,stdlib,telemetry]},
                   {optional_applications,[]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{telemetry_poller_app,[]}}]}]}},
     {apply,
         {application,load,
             [{application,uuid,
                  [{description,"UUID generator and utilities for Elixir.\n"},
                   {vsn,"1.1.8"},
                   {id,[]},
                   {modules,['Elixir.UUID']},
                   {registered,[]},
                   {applications,[kernel,stdlib,elixir]},
                   {optional_applications,[]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,drop7_live,
                  [{description,"drop7_live"},
                   {vsn,"0.1.0"},
                   {id,[]},
                   {modules,
                       ['Elixir.Drop7.InitGame','Elixir.Drop7.TileRenderer',
                        'Elixir.Drop7.Turn','Elixir.Drop7.Utils',
                        'Elixir.Drop7Live','Elixir.Drop7Live.Application',
                        'Elixir.Drop7Live.Score','Elixir.Drop7LiveWeb',
                        'Elixir.Drop7LiveWeb.CoreComponents',
                        'Elixir.Drop7LiveWeb.Endpoint',
                        'Elixir.Drop7LiveWeb.ErrorHTML',
                        'Elixir.Drop7LiveWeb.ErrorJSON',
                        'Elixir.Drop7LiveWeb.Gettext',
                        'Elixir.Drop7LiveWeb.Layouts',
                        'Elixir.Drop7LiveWeb.PageController',
                        'Elixir.Drop7LiveWeb.PageHTML',
                        'Elixir.Drop7LiveWeb.Router',
                        'Elixir.Drop7LiveWeb.Telemetry',
                        'Elixir.Drop7Web.GameLive']},
                   {registered,[]},
                   {applications,
                       [kernel,stdlib,elixir,esbuild,gettext,jason,logger,
                        number,phoenix,phoenix_html,phoenix_live_dashboard,
                        phoenix_live_reload,phoenix_live_view,plug_cowboy,
                        runtime_tools,tailwind,telemetry_metrics,
                        telemetry_poller,uuid]},
                   {optional_applications,[]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{'Elixir.Drop7Live.Application',[]}}]}]}},
     {progress,applications_loaded},
     {apply,{application,start_boot,[kernel,permanent]}},
     {apply,{application,start_boot,[stdlib,permanent]}},
     {apply,{'Elixir.Config.Provider',boot,[]}},
     {apply,{application,start_boot,[compiler,permanent]}},
     {apply,{application,start_boot,[elixir,permanent]}},
     {apply,{application,start_boot,[sasl,permanent]}},
     {apply,{application,start_boot,[logger,permanent]}},
     {apply,{application,start_boot,[castore,permanent]}},
     {apply,{application,start_boot,[inets,permanent]}},
     {apply,{application,start_boot,[decimal,permanent]}},
     {apply,{application,start_boot,[jason,permanent]}},
     {apply,{application,start_boot,[crypto,permanent]}},
     {apply,{application,start_boot,[asn1,permanent]}},
     {apply,{application,start_boot,[public_key,permanent]}},
     {apply,{application,start_boot,[ssl,permanent]}},
     {apply,{application,start_boot,[esbuild,permanent]}},
     {apply,{application,start_boot,[expo,permanent]}},
     {apply,{application,start_boot,[gettext,permanent]}},
     {apply,{application,start_boot,[number,permanent]}},
     {apply,{application,start_boot,[eex,permanent]}},
     {apply,{application,start_boot,[phoenix_pubsub,permanent]}},
     {apply,{application,start_boot,[mime,permanent]}},
     {apply,{application,start_boot,[plug_crypto,permanent]}},
     {apply,{application,start_boot,[telemetry,permanent]}},
     {apply,{application,start_boot,[plug,permanent]}},
     {apply,{application,start_boot,[phoenix_html,permanent]}},
     {apply,{application,start_boot,[phoenix_template,permanent]}},
     {apply,{application,start_boot,[cowlib,permanent]}},
     {apply,{application,start_boot,[ranch,permanent]}},
     {apply,{application,start_boot,[cowboy,permanent]}},
     {apply,{application,start_boot,[cowboy_telemetry,permanent]}},
     {apply,{application,start_boot,[plug_cowboy,permanent]}},
     {apply,{application,start_boot,[websock,permanent]}},
     {apply,{application,start_boot,[websock_adapter,permanent]}},
     {apply,{application,start_boot,[phoenix,permanent]}},
     {apply,{application,start_boot,[phoenix_live_view,permanent]}},
     {apply,{application,start_boot,[telemetry_metrics,permanent]}},
     {apply,{application,start_boot,[phoenix_live_dashboard,permanent]}},
     {apply,{application,start_boot,[file_system,permanent]}},
     {apply,{application,start_boot,[phoenix_live_reload,permanent]}},
     {apply,{application,start_boot,[runtime_tools,permanent]}},
     {apply,{application,start_boot,[tailwind,permanent]}},
     {apply,{application,start_boot,[telemetry_poller,permanent]}},
     {apply,{application,start_boot,[uuid,permanent]}},
     {apply,{application,start_boot,[drop7_live,permanent]}},
     {progress,started}]}.
